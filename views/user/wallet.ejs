<head>
    <link rel="stylesheet" href="/css/profile-section.css">
</head>

<body>
    <!-- Navbar -->
    <%- include('../partials/userNavbar', { activePage: 'wallet' }) %> 

    <main class="container mt-4">
        <div class="row">
            <%- include('../partials/profileSidebar', { activePage: 'wallet' }) %> 

            <!-- Wallet Display -->
            <div class="col-md-9 col-lg-10 col-xl-9 p-4">
                <div class="profile-section">
                    <div class="profile-header d-flex align-items-center justify-content-between">
                        <div class="d-flex align-items-center">
                            <i class="fa-solid fa-wallet me-3" style="font-size: 40px; color: var(--primary);"></i>
                            <div>
                                <h4 style="color: var(--primary); margin: 0;">Your Wallet</h4>
                                <div class="mt-1">
                                    <small class="text-muted">Manage your balance</small>
                                </div>
                            </div>
                        </div>
                        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                            <i class="fa-solid fa-plus me-2"></i>Add Money
                        </button>
                    </div>

                    <!-- Wallet Balance -->
                    <div class="info-grid" style="margin-top: 50px;">
                        <div class="info-item">
                            <div class="info-label">Current Balance</div>
                            <div class="info-value" style="font-size: 24px; color: var(--primary);">
                                ₹<%= user.wallet || '0.00' %>.00 
                            </div>
                        </div>
                        <div class="info-item">
                            <div class="info-label">Last Transaction</div>
                            <div class="info-value">
                                <%= lastTransaction ? 
                                    new Date(lastTransaction.createdAt).toLocaleDateString() + ` - ` + 
                                    (lastTransaction.type === 'add_money' ? 'Add money to wallet' : 
                                    lastTransaction.type === 'refund' ? 'Product refund' :
                                    lastTransaction.type === 'cancel' ? 'Transaction canceled' :
                                    lastTransaction.type === 'product_purchase' ? 'Product purchased' : '') + 
                                    ' - ₹' + lastTransaction.amount 
                                : 'No transactions yet' %>
                            </div>
                        </div>
                    </div>


                    <!-- Wallet Benefits -->
                    <div class="benefits-section" style="margin-top: 40px;">
                        
                        <div class="row">
                            <div class="col-md-4">
                                <div class="benefit-item text-center">
                                    <i class="fa-solid fa-bolt" style="font-size: 24px; color: var(--primary);"></i>
                                    <p class="mt-2">Fast Checkout</p>
                                    <small class="text-muted">Pay instantly without entering card details.</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="benefit-item text-center">
                                    <i class="fa-solid fa-shield-halved" style="font-size: 24px; color: var(--primary);"></i>
                                    <p class="mt-2">Secure Payments</p>
                                    <small class="text-muted">Your money is safe with us.</small>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="benefit-item text-center">
                                    <i class="fa-solid fa-gift" style="font-size: 24px; color: var(--primary);"></i>
                                    <p class="mt-2">Exclusive Offers</p>
                                    <small class="text-muted">Get discounts when you use wallet.</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Tips/Info Card -->
                    <div class="tips-section" style="margin-top: 40px;">
                        <div class="card bg-light p-3">
                            <h6 style="color: var(--primary);">Wallet Tip</h6>
                            <p class="mb-0">Keep a minimum balance of ₹500 to enjoy seamless shopping and exclusive wallet-only discounts!</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Add Money Modal -->
        <div class="modal fade" id="addMoneyModal" tabindex="-1" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addMoneyModalLabel" style="color: var(--primary);">Add Money to Wallet</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <form id="addMoneyForm">
                        <div class="modal-body">
                            <div class="mb-3">
                                <label for="amount" class="form-label">Amount (₹)</label>
                                <input type="number" class="form-control" id="amount" name="amount" min="1" step="0.01" required placeholder="Enter amount">
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Payment Method</label>
                                <select class="form-select" id="paymentMethod" name="paymentMethod">
                                    <option value="" disabled selected>Select payment method</option>
                                    <option value="razorpay">Online Payment</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-primary">Add Money</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </main>

    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <script>
        document.getElementById('addMoneyForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const amount = document.getElementById('amount').value.trim();
            const paymentMethod = document.getElementById('paymentMethod').value;

            if (!amount || isNaN(amount) || amount <= 0) {
                return Swal.fire({
                    title: "Invalid Amount",
                    text: "Please enter a valid amount.",
                    icon: "warning"
                });
            }

            if (!paymentMethod) {
                return Swal.fire({
                    text: "Please select a payment method.",
                    icon: "warning"
                });
            }

            try {
                const response = await fetch('/user/wallet/razorpay', {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ amount, paymentMethod })
                });

                const razorpayData = await response.json();
                console.log("Razorpay Response:", razorpayData);

                if (!razorpayData || !razorpayData.orderId) {
                    throw new Error("Failed to create Razorpay order");
                }

                const options = {
                    key: '<%= process.env.RAZOR_API_KEY %>', 
                    amount: razorpayData.amount,
                    currency: razorpayData.currency,
                    name: 'FitBazar',
                    description: 'Add money to wallet',
                    order_id: razorpayData.orderId, // Razorpay Order ID
                    handler: async function (response) {
                        await verifyAndConfirmPayment(response, amount, paymentMethod);
                    },
                    prefill: {
                        name: '<%= user ? user.name : "" %>',
                        email: '<%= user ? user.email : "" %>',
                        contact: '<%= user ? user.phone : "" %>'
                    },
                    theme: { color: '#3B3389' }
                };

                const rzp = new Razorpay(options);
                rzp.open(); // Open Razorpay Payment UI

            } catch (error) {
                console.error('Payment Initialization Error:', error);

                Swal.fire({
                    text: "Failed to start the payment. Please try again.",
                    icon: "error"
                });
            }
        });

        // Payment Verification Function
        async function verifyAndConfirmPayment(response, amount, paymentMethod) {
            try {
                if (!response.razorpay_payment_id || !response.razorpay_order_id || !response.razorpay_signature) {
                    throw new Error("Missing payment verification parameters");
                }

                console.log("Verifying payment with:", response);

                const verifyResponse = await fetch('/user/wallet/verify', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(response)
                });

                const verifyData = await verifyResponse.json();

                if (!verifyResponse.ok || !verifyData.success) {
                    throw new Error(verifyData.error || "Payment verification failed");
                }
                const razorpay_payment_id = response.razorpay_payment_id

                // Update Wallet
                const orderResponse = await fetch('/user/wallet', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ paymentMethod, amount, razorpay_payment_id })
                });

                const orderDataResult = await orderResponse.json();

                if (!orderResponse.ok) {
                    throw new Error(orderDataResult.error || "Failed to process order");
                }

                Swal.fire({
                    text: "Payment successful! Wallet updated.",
                    icon: "success",
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.reload(); // Refresh Wallet Balance
                });

            } catch (error) {
                console.error("Payment Verification Error:", error);

                Swal.fire({
                    title: "Payment Failed",
                    text: error.message,
                    icon: "error"
                });
            }
        }
    </script>
</body>