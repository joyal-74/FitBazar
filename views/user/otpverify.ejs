<body class="d-flex align-items-center justify-content-center min-vh-100 l-body">
    <div class="container row log-container">
        <div class="d-flex login-div flex-md-row align-items-center">
            <!-- Left Side - Image -->
            <div class="w-50 d-flex justify-content-center">
                <div class="otp-image">
                    <img src="/otp-verify.png" alt="OTP Illustration">
                </div>
            </div>

            <!-- Right Side - OTP Form -->
            <div class="w-50 pe-4 text-center">
                <h1 class="fw-bold p-4">Confirm with OTP</h1>
                <p>Please check your mail address for OTP</p>

                <!-- Timer Display -->

                <!-- OTP Input Fields -->
                <form action="/user/otpverify" method="POST" id="otpverifyForm">
                    <!-- Single Error Message Display -->
                    <p id="errorMessageContainer" class="text-danger text-center <%= errorMessage ? '' : 'd-none' %>">
                        <% if (errorMessage) { %>
                            <span id="errorText">
                                <%= errorMessage %>
                            </span>
                            <% } else { %>
                                <span id="errorText"></span>
                                <% } %>
                    </p>
                    <div class="d-flex justify-content-center">
                        <input type="text" maxlength="1" class="otp-input" id="otp1" name="otp1"
                            oninput="moveToNext(this, 'otp2')" onkeydown="handleBackspace(this, null)">
                        <input type="text" maxlength="1" class="otp-input" id="otp2" name="otp2"
                            oninput="moveToNext(this, 'otp3')" onkeydown="handleBackspace(this, 'otp1')">
                        <input type="text" maxlength="1" class="otp-input" id="otp3" name="otp3"
                            oninput="moveToNext(this, 'otp4')" onkeydown="handleBackspace(this, 'otp2')">
                        <input type="text" maxlength="1" class="otp-input" id="otp4" name="otp4"
                            oninput="moveToNext(this, null)" onkeydown="handleBackspace(this, 'otp3')">
                    </div>
                    <button type="submit" class="btn send-btn mt-4 w-75">Confirm</button>
                </form>

                <!-- Resend OTP Link (Instead of Button) -->
                <p class="mt-3">
                    <span id="timer" class="text-center me-3" style="font-size: 0.8em; color: #ff0000;"></span>
                    <a id="resendOtpLink" class="resend-link text-primary">Resend OTP</a> 
                </p>


                <!-- Go back to login -->
                <h4 class="go-back mt-4"><a href="/user/login">Go back to Login page</a></h4>
            </div>
        </div>
        <p class="text-center pt-4 logo-text-bottom">FitBazar</p>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
    // Start the timer when the page loads
    startTimer();

    function startTimer() {
        let timeLeft = 5;
        const resendOtpLink = document.getElementById("resendOtpLink");
        const timerElement = document.getElementById("timer");

        // Disable the resend link initially
        resendOtpLink.classList.add("disabled", "text-secondary");
        resendOtpLink.classList.remove("text-primary");
        resendOtpLink.style.pointerEvents = "none"; // Disable clicking

        const timerInterval = setInterval(() => {
            timerElement.textContent = `Resend OTP in ${timeLeft} seconds`;
            timeLeft--;

            if (timeLeft < 0) {
                clearInterval(timerInterval);
                timerElement.textContent = ""; // Clear the timer text
                resendOtpLink.classList.remove("disabled", "text-secondary");
                resendOtpLink.classList.add("text-primary");
                resendOtpLink.style.pointerEvents = "auto"; // Enable clicking
            }
        }, 1000);
    }

    // Resend OTP Click Event
    document.getElementById("resendOtpLink").addEventListener("click", function (event) {
    // event.preventDefault(); // Prevent default link behavior
    console.log("Resend OTP link clicked");

    // Check if the link is disabled
    if (this.classList.contains("disabled")) {
        console.log("Link is disabled");
        return;
    }

    console.log("Sending request to /user/resendOtp");

    // Send a request to resend OTP
    fetch("/user/resendOtp", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: JSON.stringify({ email: sessionStorage.getItem("email") }) // Ensure email is stored
    })
    .then(response => response.json())
    .then(data => {
        console.log("Data received", data);
        if (data.success) {
            Swal.fire({
                icon: "success",
                title: "Success!",
                text: "New OTP sent successfully!",
            });
            startTimer(); // Restart the timer
        } else {
            Swal.fire({
                icon: "error",
                title: "Error!",
                text: data.message,
            });
        }
    })
    .catch(error => {
        console.error("Error:", error);
        Swal.fire({
            icon: "error",
            title: "Oops!",
            text: "An error occurred. Please try again.",
        });
    });

});

    // OTP Input Navigation
    function moveToNext(current, nextId) {
        if (current.value.length === 1 && nextId) {
            document.getElementById(nextId).focus();
        }
    }

    function handleBackspace(current, prevId) {
        if (current.value.length === 0 && prevId) {
            document.getElementById(prevId).focus();
        }
    }

    let otpInputs = document.querySelectorAll(".otp-input");
    otpInputs.forEach((input, index) => {
        input.addEventListener("input", function () {
            moveToNext(this, otpInputs[index + 1]?.id);
        });

        input.addEventListener("keydown", function (event) {
            if (event.key === "Backspace" && this.value.length === 0 && index > 0) {
                handleBackspace(this, otpInputs[index - 1].id);
            }
        });
    });
});
    


    </script>

</body>