<head>
    <link rel="stylesheet" href="/css/profile-section.css">
    <style>
        
        .page-header {
            margin-top: 50px;
            margin-bottom: 20px;
        }
        h1 {
            font-size: 28px;
            font-weight: 700;
            color: #1a1a1a;
            margin: 0;
        }
        .order-details-card {
            background-color: #fff;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            padding: 20px;
            margin-bottom: 20px;
        }
        .order-section {
            margin-bottom: 20px;
        }
        .order-section h3 {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 10px;
            color: #3C1549;
        }
        .order-info {
            font-size: 14px;
            color: #666;
        }
        .order-info span {
            font-weight: 500;
            color: #333;
        }
        .item-row {
            display: flex;
            align-items: center;
            padding: 10px 0;
            border-bottom: 1px solid #eee;
            transition: background-color 0.3s ease;
        }
        .item-row:hover {
            background-color: #f8f9fa;
        }
        .item-img {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 6px;
            margin-right: 15px;
            border: 1px solid #eee;
        }
        .item-info {
            flex-grow: 1;
        }
        .item-info h6 {
            font-size: 14px;
            font-weight: 600;
            margin: 0 0 5px;
            color: #1a1a1a;
        }
        .item-info p {
            font-size: 12px;
            color: #777;
            margin: 0;
        }
        .item-price {
            font-size: 14px;
            font-weight: 600;
            color: #1a1a1a;
        }
        .btn {
            padding: 8px 20px;
            font-size: 13px;
            font-weight: 500;
            border-radius: 20px;
            text-decoration: none;
            transition: all 0.3s ease;
        }
        
        .order-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        /* Timeline Styles */
        .timeline {
            position: relative;
            padding-left: 30px;
        }
        .timeline-item {
            position: relative;
            margin-bottom: 20px;
        }
        .timeline-item i {
            position: absolute;
            left: -30px;
            top: 5px;
            font-size: 16px;
        }
        .timeline-item p {
            margin: 0;
            font-size: 14px;
        }
        .timeline-item .status {
            font-weight: 600;
            color: #1a1a1a;
        }
        .timeline-item .timestamp {
            color: #777;
        }
        .timeline-line {
            position: absolute;
            top: 0;
            left: 8px;
            width: 2px;
            height: 100%;
            background: linear-gradient(to bottom, #3C1549, #E0DBFC);
        }
    </style>
</head>
<body>
    <!-- Fixed Navbar -->
    <%- include('../partials/userNavbar', { activePage: 'orderDetails' }) %>  

    <!-- Main Content -->
    <main class="container mt-4">
        <div class="row g-5">
            
            <%- include('../partials/profileSidebar', { activePage: 'orderDetails' }) %>

            <!-- Order Details Content -->
            <div class="col-9">
                <div class="page-header">
                    <h1>Order Details</h1>
                </div>
                <div class="row">
                    <!-- Left Column: Order Details -->
                    <div class="col-md-6">
                        <div class="order-details-card">
                            <div class="order-section">
                                <h3>Order Summary</h3>
                                <div class="order-info">
                                    <p><span>Order ID:</span> <%= order.orderId %></p>
                                    <p><span>Order Date:</span> <%= new Date(order.createdAt).toLocaleString('en-US', {
                                        weekday: 'short',
                                        year: 'numeric',
                                        month: 'short',
                                        day: '2-digit',
                                        hour: '2-digit',
                                        minute: '2-digit',
                                        hour12: false
                                    }) %></p>
                                    <p><span>Total Amount:</span> ₹ <%= order.totalPrice %></p>
                                    <p><span>Status:</span> <%= order.status || 'Pending' %></p>
                                </div>
                            </div>
                            <div class="order-section pt-2">
                                <h3>Shipping Address</h3>
                                <div class="order-info">
                                    <p><span>Name:</span> <%= address?.name || 'N/A' %></p>
                                    <p><%= address?.addressLine1 || '' %>, <%= address?.addressLine2 || '' %></p>
                                    <p><%= address?.city || '' %>, <%= address?.pincode || '' %></p>
                                    <p><span>Phone:</span> <%= address?.phone || 'N/A' %></p>
                                </div>
                            </div>
                            <div class="order-section">
                                <h3>Payment Details</h3>
                                <div class="order-info">
                                    <p><span>Payment Method:</span> <%= order.paymentMethod === 'cod' ? 'Cash on Delivery' : order.paymentMethod %></p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Right Column: Product Details and Timeline -->
                    <div class="col-md-6">
                        <div class="order-details-card">
                            <div class="order-section">
                                <h3>Product Details</h3>
                                <div class="item-row">
                                    <img src="<%= order.product.images[0] || '/images/default-product.png' %>" 
                                        alt="Product Image" 
                                        class="item-img">
                                    <div class="item-info">
                                        <h6><%= order.product.name %></h6>
                                        <p>Qty: <%= order.quantity %> | ₹ <%= order.price %></p>
                                        <p>Color: <%= order.variant.color %> <% if (order.variant.weight) { %>
                                            | weight: <%= order.variant.weight %>
                                        <% } %></p>

                                    </div>
                                    <span class="item-price">₹<%= (order.price * order.quantity) + order.delivery - order.coupon %></span>
                                </div>
                            </div>
                            <div class="order-section">
                                <h3>Order Tracking</h3>
                                <div class="timeline">
                                    <% order.statusHistory.forEach((entry) => { %>
                                        <div class="timeline-item">
                                            <i class="<%= entry.status === 'Pending' ? 'fas fa-clock text-warning' : entry.status === 'Shipped' ? 'fas fa-truck text-primary' : entry.status === 'Out for Delivery' ? 'fas fa-shipping-fast text-info' : entry.status === 'Delivered' ? 'fas fa-check-circle text-success' : 'fas fa-times-circle text-danger' %>"></i>
                                            <p class="status">
                                                <%= entry.status === 'Shipped' ? 'Order Shipped' : entry.status === 'Out for Delivery' ? 'Out for Delivery' : entry.status === 'Delivered' ? 'Order Delivered' : entry.status === 'Cancelled' ? 'Order Cancelled' : 'Order Placed' %>
                                            </p>
                                            <p class="timestamp"><%= new Date(entry.timestamp).toLocaleString('en-US', {
                                                weekday: 'short',
                                                year: 'numeric',
                                                month: 'short',
                                                day: '2-digit',
                                                hour: '2-digit',
                                                minute: '2-digit',
                                                hour12: false
                                            }) %></p>
                                        </div>
                                    <% }) %>
                                    <div class="timeline-line"></div>
                                </div>
                            </div>
                        </div>
                        <div class="order-actions">
                            <a href="/user/orders" class="btn btn-outline-primary">Back to Orders</a>
                            <% if (order.status === 'Delivered') { %>
                                <button class="btn custom-btn" onclick="window.location.href='/user/orders/invoice?id=<%= order.orderId %>'">
                                    Download Invoice
                                </button>
                                <button class="btn btn-warning" onclick="openReturnModal('<%= order._id %>')">
                                    Return Order
                                </button>
                            <% } else if (order.status === 'Pending') { %>
                                <button class="btn btn-danger" onclick="openCancelModal('<%= order._id %>')">
                                    Cancel Order
                                </button>
                            <% } else if (order.status === 'Returned') { %>
                                <button class="btn btn-info">
                                    Returned
                                </button>
                            <% } %>
                        </div>

                        <!-- Return Modal -->
                        <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="returnModalLabel">Return Order</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <input type="hidden" id="returnOrderId">
                                        <div class="mb-3">
                                            <label for="returnReason" class="form-label">Reason for Return</label>
                                            <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                                            <div class="invalid-feedback">Please provide a reason for returning the order.</div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-danger" onclick="submitReturn()">Confirm Return</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Cancel Modal -->

                        <div class="modal fade" id="cancelModal" tabindex="-1" aria-labelledby="cancelModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h5 class="modal-title" id="cancelModalLabel">Cancel Order</h5>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        <input type="hidden" id="cancelOrderId">
                                        <div class="mb-3">
                                            <label for="cancelReason" class="form-label">Reason for Cancellation</label>
                                            <select class="form-select" id="cancelReason" required>
                                                <option value="" selected disabled>Select a reason</option>
                                                <option value="Changed my mind">Changed my mind</option>
                                                <option value="Found a better deal">Found a better deal</option>
                                                <option value="Ordered by mistake">Ordered by mistake</option>
                                                <option value="Shipping is delayed">Shipping is delayed</option>
                                                <option value="Product no longer needed">Product no longer needed</option>
                                            </select>
                                            <div class="invalid-feedback">Please select a reason for cancelling the order.</div>
                                        </div>
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-info" data-bs-dismiss="modal">Cancel</button>
                                        <button type="button" class="btn btn-danger" onclick="submitCancel()">Confirm Cancel</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function openReturnModal(orderId) {
            document.getElementById('returnOrderId').value = orderId;
            document.getElementById('returnReason').value = '';
            const modal = new bootstrap.Modal(document.getElementById('returnModal'));
            modal.show();
        }

        function openCancelModal(orderId) {
            document.getElementById('cancelOrderId').value = orderId;
            document.getElementById('cancelReason').value = ''; 
            const modal = new bootstrap.Modal(document.getElementById('cancelModal'));
            modal.show();
        }

        async function submitReturn() {
            const orderId = document.getElementById('returnOrderId').value;
            const reason = document.getElementById('returnReason').value;

            if (!reason.trim()) {
                document.getElementById('returnReason').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('returnReason').classList.remove('is-invalid');
            }

            try {
                const response = await fetch(`/user/orders/return?id=${orderId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ reason })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false,
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        text: data?.message || 'Failed to process return request.',
                        icon: 'error',
                        timer: 2000,
                        showConfirmButton: false,
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    text: 'An error occurred while processing the return.',
                    icon: 'error',
                    timer: 2000,
                    showConfirmButton: false,
                });
            }
        }

        async function submitCancel() {

            const orderId = document.getElementById('cancelOrderId').value;
            const reason = document.getElementById('cancelReason').value;

            if (!reason.trim()) {
                document.getElementById('cancelReason').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('cancelReason').classList.remove('is-invalid');
            }

            try {
                const response = await fetch(`/user/orders/cancel?id=${orderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },body : JSON.stringify({ reason })
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: 'success',
                        timer: 2000,
                        showConfirmButton: false,
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        text: data?.message || 'Failed to cancel order.',
                        icon: 'error',
                        timer: 2000,
                        showConfirmButton: false,
                    });
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    text: 'An error occurred while cancelling the order.',
                    icon: 'error',
                    timer: 2000,
                    showConfirmButton: false,
                });
            }
        }
    </script>
</body>