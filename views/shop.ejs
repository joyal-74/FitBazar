
<head>
    <link rel="stylesheet" href="/css/product.css">
</head>
<body class="bg-white">
    <%- include('./partials/userNavbar', { activePage: 'shop' }) %>

    <div class="container-fluid mt-4">
        <!-- Heading -->
        <div class="container-fluid text-center mb-5 d-none d-md-block">
            <h2 class="fw-bold" style="color: #4e3655;">Unleash Your Potential – Shop the Best from FitBazar!</h2>
        </div>

        <div class="row mx-lg-5 mx-2">
            <!-- Filter Button for Medium and Smaller Screens -->
            <div class="d-lg-none mb-3 order-0">
                <button class="btn text-white w-100" style="background-color: #5B3F64; border-radius: 28px;" type="button" data-bs-toggle="offcanvas" data-bs-target="#filterOffcanvas" aria-controls="filterOffcanvas">
                    <i class="fa-solid fa-filter me-2"></i> Filter Items
                </button>
            </div>

            <!-- Sidebar Filters (Offcanvas for md and below, regular sidebar for lg and above) -->
            <aside class="col-lg-2 d-none d-lg-block">
                <h5 class="mb-3">Filter items</h5>
                <form id="filterForm" action="/shop" method="get">
                    <!-- Preserve search and sorting -->
                    <input type="hidden" name="result" value="<%= appliedFilters && appliedFilters.result ? appliedFilters.result : '' %>">
                    <input type="hidden" name="sort" value="<%= appliedFilters && appliedFilters.sort ? appliedFilters.sort : 'newest' %>">
                
                    <!-- Category Filter -->
                    <h6>Category</h6>
                    <ul class="list-unstyled">
                        <% category.forEach(cat => { %>
                            <li>
                                <input type="checkbox" name="category" value="<%= cat.name %>"
                                    <%= appliedFilters && appliedFilters.category && appliedFilters.category.includes(cat.name) ? "checked" : "" %>>
                                <%= cat.name %>
                            </li>
                        <% }); %>
                    </ul>
                
                    <!-- Price Range -->
                    <h6 class="mt-3">Price</h6>
                    <div class="mb-4 w-100 position-relative" style="height: 3rem; margin-top: 20px;">
                        <input type="range" class="form-range range-1 position-absolute top-0 start-0 w-75" 
                            id="minRange" name="minPrice" min="0" max="10000" step="100"
                            value="<%= appliedFilters && appliedFilters.minPrice ? appliedFilters.minPrice : 0 %>">
                       
                        <input type="range" class="form-range range-2 position-absolute top-0 start-0 w-75"
                            id="maxRange" name="maxPrice" min="0" max="10000" step="100"
                            value="<%= appliedFilters && appliedFilters.maxPrice ? appliedFilters.maxPrice : 10000 %>">
                       
                        <div class="d-flex justify-content-between fw-bold mt-3 w-75">
                            <small id="minValue">₹<%= appliedFilters && appliedFilters.minPrice ? appliedFilters.minPrice : 0 %></small>
                            <small id="maxValue">₹<%= appliedFilters && appliedFilters.maxPrice ? appliedFilters.maxPrice : 10000 %></small>
                        </div>
                    </div>

                    <!-- Brand Filter -->
                    <h6>Brand</h6>
                    <ul class="list-unstyled">
                        <% 
                            const uniqueBrands = [...new Set(brands)];
                            uniqueBrands.forEach(brand => { 
                        %>
                            <li>
                                <input type="checkbox" name="brand" value="<%= brand %>"
                                    <%= appliedFilters && appliedFilters.brand && appliedFilters.brand.includes(brand) ? "checked" : "" %>>
                                <%= brand %>
                            </li>
                        <% }); %>
                    </ul>
                
                    <!-- Availability Filter -->
                    <ul class="list-unstyled">
                        <h6>Availability</h6>
                        <li>
                            <input type="checkbox" name="availability" value="outOfStock"
                                <%= appliedFilters && appliedFilters.availability ? "checked" : "" %>>
                            Include out of Stock
                        </li>
                    </ul>
                
                    <button type="submit" class="btn text-white w-75" style="background-color: #5B3F64; border-radius: 28px;">
                        Apply Filters
                    </button>
                </form>
            </aside>

            <!-- Offcanvas for Filters (Visible on md and below) -->
            <div class="offcanvas offcanvas-start" tabindex="-1" id="filterOffcanvas" aria-labelledby="filterOffcanvasLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="filterOffcanvasLabel">Filter Items</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body">
                    <form id="filterFormOffcanvas" action="/shop" method="get">
                        <!-- Preserve search and sorting -->
                        <input type="hidden" name="result" value="<%= appliedFilters && appliedFilters.result ? appliedFilters.result : '' %>">
                        <input type="hidden" name="sort" value="<%= appliedFilters && appliedFilters.sort ? appliedFilters.sort : 'newest' %>">
                    
                        <!-- Category Filter -->
                        <h6>Category</h6>
                        <ul class="list-unstyled">
                            <% category.forEach(cat => { %>
                                <li>
                                    <input type="checkbox" name="category" value="<%= cat.name %>"
                                        <%= appliedFilters && appliedFilters.category && appliedFilters.category.includes(cat.name) ? "checked" : "" %>>
                                    <%= cat.name %>
                                </li>
                            <% }); %>
                        </ul>
                    
                        <!-- Price Range -->
                        <h6 class="mt-3">Price</h6>
                        <div class="mb-4 w-100 position-relative" style="height: 3rem; margin-top: 20px;">
                            <input type="range" class="form-range range-1 position-absolute top-0 start-0 w-75" 
                                id="minRangeOffcanvas" name="minPrice" min="0" max="10000" step="100"
                                value="<%= appliedFilters && appliedFilters.minPrice ? appliedFilters.minPrice : 0 %>">
                           
                            <input type="range" class="form-range range-2 position-absolute top-0 start-0 w-75"
                                id="maxRangeOffcanvas" name="maxPrice" min="0" max="10000" step="100"
                                value="<%= appliedFilters && appliedFilters.maxPrice ? appliedFilters.maxPrice : 10000 %>">
                           
                            <div class="d-flex justify-content-between fw-bold mt-3 w-75">
                                <small id="minValueOffcanvas">₹<%= appliedFilters && appliedFilters.minPrice ? appliedFilters.minPrice : 0 %></small>
                                <small id="maxValueOffcanvas">₹<%= appliedFilters && appliedFilters.maxPrice ? appliedFilters.maxPrice : 10000 %></small>
                            </div>
                        </div>

                        <!-- Brand Filter -->
                        <h6>Brand</h6>
                        <ul class="list-unstyled">
                            <% uniqueBrands.forEach(brand => { %>
                                <li>
                                    <input type="checkbox" name="brand" value="<%= brand %>"
                                        <%= appliedFilters && appliedFilters.brand && appliedFilters.brand.includes(brand) ? "checked" : "" %>>
                                    <%= brand %>
                                </li>
                            <% }); %>
                        </ul>
                    
                        <!-- Availability Filter -->
                        <ul class="list-unstyled">
                            <h6>Availability</h6>
                            <li>
                                <input type="checkbox" name="availability" value="outOfStock"
                                    <%= appliedFilters && appliedFilters.availability ? "checked" : "" %>>
                                Include out of Stock
                            </li>
                        </ul>
                    
                        <button type="submit" class="btn text-white w-75" style="background-color: #5B3F64; border-radius: 28px;">
                            Apply Filters
                        </button>
                    </form>
                </div>
            </div>

            <!-- Product Grid -->
            <main class="col-lg-10 col-12 mb-3">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <!-- Label -->
                    <h5 class="fw-bold mb-0" style="color: #4e3655;">All Products</h5>

                    <form id="searchProductForm" action="/shop" method="get" class="d-flex d-none d-lg-block">
                        <input type="hidden" name="category" value="<%= appliedFilters && appliedFilters.category ? appliedFilters.category : '' %>">
                        <input type="hidden" name="price" value="<%= appliedFilters && appliedFilters.price ? appliedFilters.price : '' %>">
                        <input type="hidden" name="brand" value="<%= appliedFilters && appliedFilters.brand ? appliedFilters.brand : '' %>">
                        <input type="hidden" name="availability" value="<%= appliedFilters && appliedFilters.availability ? appliedFilters.availability : '' %>">
                        <input type="hidden" name="sort" value="<%= appliedFilters && appliedFilters.sort ? appliedFilters.sort : 'newest' %>">
                    
                        <div class="input-group">
                            <input id="searchbar" class="form-control" type="search" name="result" placeholder="Search products"
                                value="<%= appliedFilters && appliedFilters.result ? appliedFilters.result : '' %>">
                            <button class="btn text-white" type="submit" style="background-color: #5B3F64;">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                        </div>
                    </form>
                    
                    <!-- Sort Options -->
                    <form id="sortForm" action="/shop" method="get">
                        <!-- Preserve filters and search when sorting -->
                        <input type="hidden" name="result" value="<%= appliedFilters && appliedFilters.result ? appliedFilters.result : '' %>">
                        <input type="hidden" name="category" value="<%= appliedFilters && appliedFilters.category ? appliedFilters.category : '' %>">
                        <input type="hidden" name="minPrice" value="<%= appliedFilters && appliedFilters.minPrice ? appliedFilters.minPrice : '' %>">
                        <input type="hidden" name="maxPrice" value="<%= appliedFilters && appliedFilters.maxPrice ? appliedFilters.maxPrice : '' %>">
                        <input type="hidden" name="brand" value="<%= appliedFilters && appliedFilters.brand ? appliedFilters.brand : '' %>">
                        <input type="hidden" name="availability" value="<%= appliedFilters && appliedFilters.availability ? appliedFilters.availability : '' %>">
                    
                        <select name="sort" class="form-select" onchange="this.form.submit()">
                            <option value="newest" <%= sortOption === 'newest' ? 'selected' : '' %>>Newest</option>
                            <option value="priceLowToHigh" <%= sortOption === 'priceLowToHigh' ? 'selected' : '' %>>Price: Low to High</option>
                            <option value="priceHighToLow" <%= sortOption === 'priceHighToLow' ? 'selected' : '' %>>Price: High to Low</option>
                            <option value="aToZ" <%= sortOption === 'aToZ' ? 'selected' : '' %>>A to Z</option>
                            <option value="zToA" <%= sortOption === 'zToA' ? 'selected' : '' %>>Z to A</option>
                            <option value="ratingHighToLow" <%= sortOption === 'ratingHighToLow' ? 'selected' : '' %>>Rating: High to Low</option>
                        </select>
                    </form>
                </div>
                
                <div class="row" id="product-container">
                    <% product.forEach(product => { %>
                        <div class="col-6 col-md-4 col-lg-3 my-3">
                            <div class="card shadow-sm p-2 bg-white h-100">
                                <!-- Image Container with Offer Badge & Wishlist Button -->
                                <div class="position-relative">
                                    <a href="/product?productId=<%= product._id %>&category=<%= product.category._id %>" class="text-decoration-none text-dark">
                                        <img src="<%= product.images[0] %>" alt="<%= product.name %>"
                                            class="product-img card-img-top mx-auto d-block img-fluid"
                                            >
                                    </a>
                
                                    <% const displayOffer = Math.max(product.productOffer || 0, product.category?.offer || 0);
                                        if (displayOffer > 0) { 
                                    %>
                                        <span class="badge bg-danger position-absolute top-0 start-0 m-2 px-2 py-1">
                                            <%= displayOffer %>% OFF
                                        </span>
                                    <% } %>
                
                                    <!-- Wishlist Button -->
                                    <button 
                                        class="btn btn-sm position-absolute top-0 end-0 m-2 px-2 add-to-wishlist-btn" 
                                        style="background-color: rgba(255, 255, 255, 0.9); border-radius: 50%;" 
                                        data-user-id="<%= user?._id %>" 
                                        data-product-id="<%= product._id %>"  
                                        data-color="<%= product.variants[0]?.color %>" 
                                        data-weight="<%= product.variants[0]?.weight %>" 
                                        data-is-wishlisted="<%= wishlistProductIds?.includes(product._id.toString()) %>">
                                        <i class="<%= wishlistProductIds?.includes(product._id.toString()) ? 'fa-solid' : 'fa-regular' %> fa-heart text-danger"></i>
                                    </button>
                                </div>
                
                                <!-- Card Body -->
                                <div class="card-body p-2">
                                    <p class="card-title text-truncate mb-1 fw-semibold fs-6 fs-md-5"><%= product.name %></p>
                                    <p class="text-warning mb-1 small"><!-- rating stars -->
                                        ★ <%= product.rating %> (<%= product.reviewCount %>)
                                    </p>
                                    <p class="d-flex align-items-center gap-2 mb-2">
                                        <strong class="text-success fs-6 fs-md-5">
                                            ₹<%= Math.round(product.price - (product.price * displayOffer / 100)) %>
                                        </strong> 
                                        <del class="text-dark small">₹<%= product.price %></del>
                                    </p>
                                
                                    <!-- Hide buttons on small screens -->
                                    <div class="d-none d-md-flex gap-2 justify-content-between">
                                        <button class="btn w-50 btn-sm text-dark custom-outline-btn addToCartBtn" style="background-color: #ffffff; border: 1px solid #3C1549; font-size: 0.8em;"
                                            data-user-id="<%= user?._id %>"
                                            data-product-id="<%= product._id %>"
                                            data-sale-price="<%= Math.round(product.price - (product.price * displayOffer / 100)) %>"
                                            data-base-price="<%= product.price %>"
                                            data-color="<%= product.variants[0]?.color %>"
                                            data-weight="<%= product.variants[0]?.weight %>">
                                            <i class="fa fa-cart-shopping me-2"></i>
                                            <span class="d-none d-xxl-inline">Add</span>
                                        </button>

                                        <!-- Buy Now Button -->
                                        <a href="/product?productId=<%= product._id %>&category=<%= product.category._id %>" class="w-50">
                                            <button class="btn w-100 btn-sm text-white" style="background: linear-gradient(to right, #5B3F64, #3C1549); border: none; font-size: 0.8em;">
                                                <i class="fa fa-bolt me-2"></i>
                                                <span class="d-none d-xxl-inline">Buy</span>
                                            </button>
                                        </a>
                                    </div>
                                </div>                               
                            </div>
                        </div>
                    <% }); %>
                </div>
                
                <!-- Pagination -->
                <div class="d-flex w-100 justify-content-center mt-3">
                    <nav aria-label="Page navigation">
                        <ul class="pagination">
                            <% 
                                const queryParams = new URLSearchParams();
                                if (appliedFilters?.category) {
                                    const categories = Array.isArray(appliedFilters.category) ? appliedFilters.category : [appliedFilters.category];
                                    categories.forEach(cat => queryParams.append('category', cat));
                                }
                                if (appliedFilters?.minPrice) queryParams.set('minPrice', appliedFilters.minPrice);
                                if (appliedFilters?.maxPrice) queryParams.set('maxPrice', appliedFilters.maxPrice);

                                if (appliedFilters?.brand) {
                                    const brands = Array.isArray(appliedFilters.brand) ? appliedFilters.brand : [appliedFilters.brand];
                                    brands.forEach(b => queryParams.append('brand', b));
                                }
                                if (appliedFilters?.availability) queryParams.set('availability', 'outOfStock');
                                if (appliedFilters?.result) queryParams.set('result', appliedFilters.result);
                                if (appliedFilters?.sort) queryParams.set('sort', appliedFilters.sort);
                            %>
                
                            <% if (currentPage > 1) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?<%= queryParams.toString() %>&page=<%= currentPage - 1 %>">Previous</a>
                                </li>
                            <% } %>
                
                            <% for (let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                    <a class="page-link" href="?<%= queryParams.toString() %>&page=<%= i %>"><%= i %></a>
                                </li>
                            <% } %>
                
                            <% if (currentPage < totalPages) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?<%= queryParams.toString() %>&page=<%= currentPage + 1 %>">Next</a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>                
            </main>
        </div>

        <!-- Footer -->
        <%- include('./partials/userFooter') %>
    </div>

    <script>
        // Price Range Slider for Sidebar
        const minRange = document.getElementById('minRange');
        const maxRange = document.getElementById('maxRange');
        const minValue = document.getElementById('minValue');
        const maxValue = document.getElementById('maxValue');

        function updateLabels() {
            let min = parseInt(minRange.value);
            let max = parseInt(maxRange.value);

            if (min > max) {
                [min, max] = [max, min];
                minRange.value = min;
                maxRange.value = max;
            }

            minValue.textContent = `₹${min}`;
            maxValue.textContent = `₹${max}`;
        }

        minRange.addEventListener('input', updateLabels);
        maxRange.addEventListener('input', updateLabels);

        // Price Range Slider for Offcanvas
        const minRangeOffcanvas = document.getElementById('minRangeOffcanvas');
        const maxRangeOffcanvas = document.getElementById('maxRangeOffcanvas');
        const minValueOffcanvas = document.getElementById('minValueOffcanvas');
        const maxValueOffcanvas = document.getElementById('maxValueOffcanvas');

        function updateLabelsOffcanvas() {
            let min = parseInt(minRangeOffcanvas.value);
            let max = parseInt(maxRangeOffcanvas.value);

            if (min > max) {
                [min, max] = [max, min];
                minRangeOffcanvas.value = min;
                maxRangeOffcanvas.value = max;
            }

            minValueOffcanvas.textContent = `₹${min}`;
            maxValueOffcanvas.textContent = `₹${max}`;
        }

        minRangeOffcanvas.addEventListener('input', updateLabelsOffcanvas);
        maxRangeOffcanvas.addEventListener('input', updateLabelsOffcanvas);

        // Initialize on page load
        updateLabels();
        updateLabelsOffcanvas();

        // Search Form Submission
        document.getElementById("searchProductForm")?.addEventListener("submit", async function (event) {
            event.preventDefault();

            const query = document.getElementById("searchbar").value.trim();
            const currentUrl = new URL(window.location.href);

            if (query) {
                currentUrl.searchParams.set("result", query);
            } else {
                currentUrl.searchParams.delete("result");
            }

            window.location.href = currentUrl.toString();
        });

        // Add to Cart
        document.querySelectorAll('.addToCartBtn').forEach(btn => {
            btn.addEventListener('click', async (e) => {
                e.preventDefault();
                const btnEl = e.currentTarget;

                const userId = btnEl.dataset.userId;
                const productId = btnEl.dataset.productId;
                const price = btnEl.dataset.salePrice;
                const basePrice = btnEl.dataset.basePrice;
                const selectedColor = btnEl.dataset.color;
                const selectedWeight = btnEl.dataset.weight;
                const quantity = 1;

                const productDetails = {
                    userId,
                    productId,
                    quantity,
                    price,
                    basePrice,
                    variants: { color: selectedColor, weight: selectedWeight }
                };

                try {
                    const response = await fetch('/user/cart', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(productDetails)
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        Swal.fire({
                            icon: 'warning',
                            text: data.error,
                            showConfirmButton: false,
                            timer: 2000
                        });
                    } else {
                        Swal.fire({
                            icon: 'success',
                            text: 'Added to cart successfully',
                            showConfirmButton: true,
                            confirmButtonText: 'Go to Cart',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/user/cart';
                            }
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        text: 'An error occurred',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            });
        });

        // Add to Wishlist
        document.querySelectorAll('.add-to-wishlist-btn').forEach(btn => {
            const icon = btn.querySelector('i');

            // On load: set heart based on data-is-wishlisted
            if (btn.dataset.isWishlisted === 'true') {
                icon.classList.remove('fa-regular');
                icon.classList.add('fa-solid');
            }

            btn.addEventListener('click', async (e) => {
                e.preventDefault();

                const userId = btn.dataset.userId;
                const productId = btn.dataset.productId;
                const selectedColor = btn.dataset.color;
                const selectedWeight = btn.dataset.weight;

                const productDetails = { userId, productId, color: selectedColor, weight: selectedWeight };

                try {
                    const response = await fetch('/user/wishlist', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(productDetails)
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        Swal.fire({
                            icon: 'warning',
                            text: data.error,
                            showConfirmButton: false,
                            timer: 2000
                        });
                    } else {
                        // Set icon to solid heart
                        icon.classList.remove('fa-regular');
                        icon.classList.add('fa-solid');
                        btn.dataset.isWishlisted = 'true';

                        Swal.fire({
                            icon: 'success',
                            text: 'Added to wishlist successfully',
                            showConfirmButton: true,
                            confirmButtonText: 'Go to wishlist',
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/user/wishlist';
                            }
                        });
                    }
                } catch (error) {
                    Swal.fire({
                        icon: 'error',
                        text: 'An error occurred',
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            });
        });
    </script>
</body>