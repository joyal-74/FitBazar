<head>
    <link rel="stylesheet" href="/css/product.css">
</head>

<body class="bg-white">
    <!-- Navbar -->
    <%- include('./partials/userNavbar', { activePage: 'shop' }) %>

    <!-- Breadcrumb (unchanged) -->
    <div class="container mt-3">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item m-0"><a href="/" class="text-dark text-decoration-none">Home</a></li>
                <li class="breadcrumb-item m-0"><a href="/shop" class="text-dark text-decoration-none">Shop</a></li>
                <li class="breadcrumb-item m-0"><a href="/shop?category=<%= product.category.name %>" class="text-dark text-decoration-none">
                    <%= product.category.name %>
                </a></li>
                <li class="breadcrumb-item active" aria-current="page"><a class="text-dark text-decoration-none">
                    <%= product.name %>
                </a></li>
            </ol>
        </nav>
    </div>

    <main>
        <div class="container mt-5">
            <div class="row">
                <div class="col-md-5 me-3">
                    <div class="zoom-container" style="position: relative; overflow: hidden; border-radius: 10px;">
                        <img id="mainImage" src="<%= product.images[0] %>" class="img-fluid zoom-image" alt="Product Name" style="border-radius: 10px; height: 480px;">
                        <div class="zoom-lens" style="position: absolute; width: 150px; height: 150px; border: 1px solid #ddd; background: rgba(255, 255, 255, 0.5); pointer-events: none; display: none;"></div>
                    </div>
                    <div class="d-flex gap-2 mt-2 thumb-container">
                        <% product.images.forEach((image, index) => { %>
                            <img src="<%= image %>" class="img-thumbnail thumbnail" style="width: 80px; height: 80px; cursor: pointer;">
                        <% }) %>
                    </div>
                </div>

                <div class="col-md-6">
                    <h3 class="fw-bold"><%= product.brand %> <%= product.name %></h3>
                    <% 
                        let totalRating = reviews.reduce((sum, review) => sum + review.star, 0);
                        let avgRating = reviews.length > 0 ? (totalRating / reviews.length).toFixed(1) : 0;
                    %>

                    <p class="text-warning fs-5 fw-semibold">
                        <% for (let i = 1; i <= Math.floor(avgRating); i++) { %>
                            &#9733; 
                        <% } %>
                        <% if (avgRating % 1 !== 0) { %>
                            &#9733;&#xFE0E;
                        <% } %>
                        <% for (let i = Math.ceil(avgRating); i < 5; i++) { %>
                            &#9734;
                        <% } %>
                        (<%= reviews.length %> <%= reviews.length === 1 ? 'Review' : 'Reviews' %>)
                    </p>

                    <p>
                        <% const displayOffer = Math.max(product.productOffer || 0, product.category.offer || 0); if (displayOffer > 0) {  %>
                        <span class="text-danger fs-2 fw-bold me-2">₹<%= Math.round(product.price - (product.price * displayOffer / 100)) %></span>
                        <del class="text-muted fs-5 me-3">₹<%= product.price %></del>
                            <strong><%= displayOffer || 0 %>% OFF</strong> 
                        <% } %>
                    </p>
                    <div class="mt-3">
                        <label class="form-label fw-bold">Availability :</label>
                        <span id="stockStatus" class="badge bg-secondary">Select a variant</span>
                    </div>
                    <p class="mt-3"><%= product.shortDescription || "" %></p>

                    <div class="d-flex gap-3">
                        <button class="btn add-to-cart-btn text-white w-50" id="addtocartBtn"><i class="fa fa-cart-plus me-2"></i>Add to Cart</button>
                        <button class="btn btn-outline-secondary w-50" id="addToWishlistBtn"><i class="fa fa-heart me-2"></i><span class="wishlist-text">Add to Wishlist</span></button>
                    </div>

                    <div class="row g-3 my-3">
                        <div class="col-md-4">
                            <label for="quantity" class="form-label fw-bold">Quantity:</label>
                            <select id="quantity" name="quantity" class="form-select">
                                <% for (let i = 1; i <= 5; i++) { %>
                                    <option value="<%= i %>"><%= i %></option>
                                <% } %>
                            </select>
                        </div>

                        <% if (product.variants && product.variants.length > 0) { %>
                            <div class="col-12">
                                <label class="form-label fw-bold">Color:</label>
                                <div id="colorOptions">
                                    <% const uniqueColors = [...new Set(product.variants.map(v => v.color).filter(Boolean))]; %>
                                    <% uniqueColors.forEach((color, index) => { %>
                                        <button class="variant-btn <%= index === 0 ? 'active' : '' %>" 
                                                data-color="<%= color %>">
                                            
                                            <%= color %>
                                        </button>
                                    <% }) %>
                                </div>
                            </div>

                            <div class="col-12">
                                <% if (product.variants && product.variants.some(variant => variant.weight)) { %>
                                    <div class="col-12">
                                        <label class="form-label fw-bold">Weight:</label>
                                        <div id="weightOptions">
                                            <% const uniqueWeights = [...new Set(product.variants.map(variant => variant.weight).filter(Boolean))]; %>
                                            <% uniqueWeights.forEach((weight, index) => { %>
                                                <button class="variant-btn <%= index === 0 ? 'active' : '' %>" 
                                                        data-weight="<%= weight %>">
                                                    <%= weight %>
                                                </button>
                                            <% }) %>
                                        </div>
                                    </div>
                                <% } %>
                            </div>
                        <% } %>
                    </div>

                    <!-- Hidden Inputs -->
                    <input type="hidden" name="userId" id="userId" value="<%= userId %>">
                    <input type="hidden" name="productId" id="productId" value="<%= product.productId %>">
                    <input type="hidden" name="productdbId" id="productdbId" value="<%= product._id %>">
                    <input type="hidden" id="selectedColor" name="selectedColor" value="">
                    <input type="hidden" id="selectedWeight" name="selectedWeight" value="">
                    <input type="hidden" id="salePrice" name="salePrice" value="<%= Math.round(product.price - (product.price * displayOffer / 100)) %>">
                    <input type="hidden" id="basePrice" name="basePrice" value="<%= product.price %>">

                    <!-- Coupons (unchanged) -->
                    <!-- <div class="card p-3 bg-light border">
                        <h5 class="fw-bold" style="color: #9c3ec8;"><i class="fas fa-tag"></i> Available Coupons</h5>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><i class="fas fa-percent"></i> Get 10% Off on orders above ₹1000</span>
                            <button class="btn btn-sm btn-outline-primary copy-btn" data-code="SAVE10">Copy Code</button>
                        </div>
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <span><i class="fas fa-gift"></i> Buy 2, Get 1 Free!</span>
                            <button class="btn btn-sm btn-outline-primary copy-btn" data-code="BUY2GET1">Copy Code</button>
                        </div>
                        <div class="d-flex justify-content-between align-items-center">
                            <span><i class="fas fa-shipping-fast"></i> Free Shipping on orders above ₹1500</span>
                        </div>
                    </div> -->
                </div>
            </div>
        </div>

        <div class="product-details container mt-5">
            <!-- Tab Navigation -->
            <ul class="nav nav-tabs" id="productTab">
                <li class="nav-item">
                    <a class="nav-link active" id="product-details-tab" data-bs-toggle="tab" href="#description">
                        Product Details
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="specs-tab" data-bs-toggle="tab" href="#specifications">
                        Specifications
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" id="reviews-tab" data-bs-toggle="tab" href="#reviews">
                        Reviews
                    </a>
                </li>
            </ul>
        
            <!-- Tab Content -->
            <div class="tab-content mt-3">
                <!-- Description Tab -->
                <div class="tab-pane fade show active" id="description">
                    <div class="card p-3">
                        <h5 class="fw-bold">Description</h5>
                        <p class="text-muted">
                            <%= product.description %>
                        </p>
                    </div>
                </div>
        
                <!-- Specifications Tab -->
                <div class="tab-pane fade" id="specifications">
                    <div class="card shadow-sm border-0 p-4 bg-white" style="border-radius: 12px;">
                        <h5 class="fw-bold mb-4 text-dark" style="font-size: 1.25rem; letter-spacing: 0.5px;">
                            Product Specifications
                        </h5>
                        <div class="specifications-container">
                            <% const specLines = product.productSpec.split('\n').filter(line => line.trim());
                                if (specLines.length === 0) { %>
                                <p class="text-muted text-center py-3 m-0">No specifications available.</p>
                            <% } else {
                                specLines.forEach((line, index) => {
                                    const [key, value] = line.split(/[-:]/).map(part => part.trim());
                                    if (key && value) { %>
                                    <div class="spec-item d-flex align-items-center py-3 <%= index < specLines.length - 1 ? 'border-bottom' : '' %>"
                                         style="transition: background 0.2s ease;">
                                        <span class="spec-key fw-semibold text-secondary me-3" style="min-width: 150px; width: 30%; font-size: 0.95rem;">
                                            <%= key %>
                                        </span>
                                        <span class="spec-value text-dark" style="flex: 1; font-size: 0.95rem;">
                                            <%= value %>
                                        </span>
                                    </div>
                            <% } }); } %>
                        </div>
                    </div>
                </div>
                
        
                <!-- Reviews Tab -->
                <div class="tab-pane fade" id="reviews">
                    <!-- Previous Reviews Section -->
                    <div class="border rounded p-3 mb-4 bg-white">
                        <h5 class="fw-bold">Customer Reviews</h5>
                    
                        <% if (reviews.length > 0) { %>
                            <% reviews.forEach(review => { %>
                                <div class="border-bottom pb-2 mb-2">
                                    <div class="d-flex justify-content-between">
                                        <h6 class="fw-semibold mb-0"><%= review.name %></h6>
                                        <span class="text-warning">
                                            <% for (let i = 1; i <= review.rating; i++) { %>
                                                &#9733; <!-- Solid star -->
                                            <% } %>
                                        </span>
                                        <span class="text-muted">
                                            <% for (let i = review.rating + 1; i <= 5; i++) { %>
                                                &#9734; <!-- Empty star -->
                                            <% } %>
                                        </span>
                                    </div>
                                    <p class="small text-muted mb-1">
                                        Posted on <%= new Date(review.createdAt).toLocaleDateString('en-US', {
                                            year: 'numeric', month: 'short', day: 'numeric'
                                        }) %>
                                    </p>
                                    <p class="mb-0"><%= review.comment %></p>
                                </div>
                            <% }) %>
                    
                            <!-- Load More Reviews Button -->
                            <button class="btn btn-outline-primary mx-auto d-block text-center btn-sm w-25 mt-2">
                                Load More Reviews
                            </button>
                        <% } else { %>
                            <p class="text-muted text-center mt-3">No reviews yet. Be the first to leave a review!</p>
                        <% } %>
                    </div>
                    
        
                    <!-- Write a Review Form -->
                    <form class="p-3 border rounded bg-white" id="reviewForm">
                        <h5 class="fw-bold">Write a Review</h5>
        
                        <div class="d-flex w-100 gap-3">
                            <div class="mb-2 w-100">
                                <label class="form-label fw-semibold">Your Name</label>
                                <input type="text" class="form-control" placeholder="Enter your name" id="reviewName" name="reviewName">
                            </div>
        
                            <!-- Rating Selection -->
                            <div class="mb-2 w-100">
                                <label class="form-label fw-semibold">Rating</label>
                                <select class="form-select text-warning" name="reviewStar" id="reviewStar">
                                    <option value="">Select Rating</option>
                                    <option value="5" class="text-warning">&#9733;&#9733;&#9733;&#9733;&#9733;</option>
                                    <option value="4" class="text-warning">&#9733;&#9733;&#9733;&#9733;</option>
                                    <option value="3" class="text-warning">&#9733;&#9733;&#9733;</option>
                                    <option value="2" class="text-warning">&#9733;&#9733;</option>
                                    <option value="1" class="text-warning">&#9733;</option>
                                </select>
                            </div>
                        </div>
        
                        <!-- Review Text -->
                        <div class="mb-3">
                            <label class="form-label fw-semibold">Your Review</label>
                            <textarea class="form-control" rows="3" placeholder="Write your review..." name="reviewComment" id="reviewComment"></textarea>
                        </div>
        
                        <!-- Submit & Cancel Buttons -->
                        <button type="submit" class="btn text-white" style="background-color: #4D44AD;">
                            <i class="fas fa-paper-plane"></i> Submit
                        </button>
                        <button type="reset" class="btn btn-outline-primary">
                            <i class="fas fa-times"></i> Cancel
                        </button>
                    </form>
                </div>
            </div>
        </div>
        

        <div class="container my-5">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <!-- Label -->
                <h5 class="fw-bold mb-0" style="color: #3B3389;">Related Products</h5>
                <button class="btn btn-outline-secondary text-muted">View All</button>
            </div>
            <div class="row" id="product-container">
                <% relateproducts.forEach(product=> { %>
                    <div class="col-md-3 col-lg-3 my-3">
                        <a href="/product?productId=<%= product._id %>&category=<%= product.category._id %>"
                            class="text-decoration-none text-dark">
                            <div class="card shadow-sm p-2">
                                <!-- Image Container with Offer Badge -->
                                <div class="position-relative">
                                    <img src="<%= product.images[0] %>" alt="<%= product.name %>"
                                        class="product-img card-img-top mx-auto d-block"
                                        style="height: 250px; object-fit: cover;">

                                   <% const displayOffer = Math.max(product.productOffer || 0, product.category.offer || 0); if (displayOffer > 0) {  %>
                                        <span class="badge bg-danger position-absolute top-0 start-0 m-2 px-2 py-1">
                                            <%= displayOffer %>% OFF
                                        </span>
                                    <% } %>
                                </div>

                                <div class="card-body p-2">
                                    <h6 class="card-title text-truncate mb-1">
                                        <%= product.name %>
                                    </h6>
                                    <p class="text-warning mb-1">⭐ <%= product.rating %> (<%= product.reviewsCount %>)
                                    </p>
                                    <p class="d-flex align-items-center gap-2 mb-2">
                                        <strong class="fs-6 text-success">₹<%= Math.round(product.price - (product.price * displayOffer / 100)) %></strong>
                                        <del class="text-dark small">₹<%= product.price %></del>
                                    </p>
                                    <div class="d-flex gap-2">
                                        <button class="btn w-50 btn-sm custom-outline-btn">
                                            <i class="fa fa-cart-shopping me-2"></i> Add to Cart
                                        </button>
                                        <button class="btn w-50 btn-sm text-white"
                                            style="background: linear-gradient(to right, #5B3F64, #3C1549); border: none; font-size: 0.8em;">
                                            <i class="fa fa-bolt me-2"></i> Buy Now
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                    <% }); %>
            </div>
        </div>    
    </main>

    <!-- Footer -->
    <%- include('./partials/userFooter') %>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

 <script>
    const variants = <%- JSON.stringify(product.variants) %>;

document.addEventListener('DOMContentLoaded', () => {
    const colorButtons = document.querySelectorAll('#colorOptions .variant-btn');
    const weightButtons = document.querySelectorAll('#weightOptions .variant-btn');
    const stockStatus = document.getElementById('stockStatus');
    const mainImage = document.getElementById('mainImage');
    const thumbnails = document.querySelectorAll('.thumbnail');
    const addToCartBtn = document.getElementById('addtocartBtn');
    const selectedColorInput = document.getElementById('selectedColor');
    const selectedWeightInput = document.getElementById('selectedWeight');
    const addToWishlistBtn = document.getElementById('addToWishlistBtn')


    function updateVariantDisplay() {
        const selectedColor = selectedColorInput.value;
        const selectedWeight = selectedWeightInput.value;

        // Find matching variant
        const variant = variants.find(v => v.color === selectedColor && v.weight === selectedWeight);

        if (variant) {
            stockStatus.textContent = variant.stock > 0 
                ? `In Stock: ${variant.stock}` 
                : 'Out of Stock';
            stockStatus.className = `badge bg-${variant.stock > 0 ? 'success' : 'warning'}`;
            addToCartBtn.disabled = variant.stock <= 0;
            addToWishlistBtn.disabled = false;
        } else {
            stockStatus.textContent = 'Combination unavailable';
            stockStatus.className = 'badge bg-danger';
            addToCartBtn.disabled = true;
            addToWishlistBtn.disabled = true;
        }
    }

    // Handle color selection
    colorButtons.forEach(button => {
        button.addEventListener('click', () => {
            colorButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            selectedColorInput.value = button.dataset.color;
            updateVariantDisplay();
        });
    });

    // Handle weight selection
    weightButtons.forEach(button => {
        button.addEventListener('click', () => {
            weightButtons.forEach(btn => btn.classList.remove('active'));
            button.classList.add('active');
            selectedWeightInput.value = button.dataset.weight;
            updateVariantDisplay();
        });
    });

    // Handle thumbnail hover for changing main image
    thumbnails.forEach(thumbnail => {
        thumbnail.addEventListener('mouseover', () => {
            mainImage.src = thumbnail.src;
        });
    });

    // Zoom functionality
    const zoomContainer = document.querySelector('.zoom-container');
    const zoomLens = document.querySelector('.zoom-lens');

    zoomContainer?.addEventListener('mousemove', (e) => {
        const containerRect = zoomContainer.getBoundingClientRect();
        const x = e.clientX - containerRect.left;
        const y = e.clientY - containerRect.top;

        const lensX = Math.max(0, Math.min(x - 75, mainImage.width - 150));
        const lensY = Math.max(0, Math.min(y - 75, mainImage.height - 150));

        zoomLens.style.left = `${lensX}px`;
        zoomLens.style.top = `${lensY}px`;
        zoomLens.style.display = 'block';

        mainImage.style.transform = 'scale(2)';
        mainImage.style.transformOrigin = `${x}px ${y}px`;
    });

    zoomContainer?.addEventListener('mouseleave', () => {
        zoomLens.style.display = 'none';
        mainImage.style.transform = 'scale(1)';
    });

    // Add to cart logic
    addToCartBtn.addEventListener('click', async (e) => {
        e.preventDefault();

        const userId = document.getElementById('userId').value;
        const productId = document.getElementById('productdbId').value;
        const quantity = document.getElementById('quantity').value;
        const price = document.getElementById('salePrice').value;
        const basePrice = document.getElementById('basePrice').value;
        const selectedColor = selectedColorInput.value;
        const selectedWeight = selectedWeightInput.value;

        const productDetails = {
            userId,
            productId,
            quantity,
            price,
            basePrice,
            variants: { color: selectedColor, weight: selectedWeight }
        };

        try {
            const response = await fetch('/user/cart', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(productDetails)
            });

            const data = await response.json();
            if (!response.ok) {
                Swal.fire({
                    icon: 'warning',
                    text: data.error,
                    showConfirmButton: false,
                    timer: 2000
                });
            } else {
                Swal.fire({
                    icon: 'success',
                    text: 'Added to cart successfully',
                    showConfirmButton: true,
                    confirmButtonText: 'Go to Cart',
                }).then((result) => {
                    if (result.isConfirmed) {
                        window.location.href = '/user/cart';
                    }
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                text: 'An error occurred',
                showConfirmButton: false,
                timer: 2000
            });
        }
    });

    addToWishlistBtn.addEventListener('click', async (e) => {
        e.preventDefault();

        const userId = document.getElementById('userId').value;
        const productId = document.getElementById('productdbId').value;
        const selectedColor = selectedColorInput.value;
        const selectedWeight = selectedWeightInput.value;

        const wishlistItem = {
            userId,
            productId,
            color: selectedColor || null,
            weight: selectedWeight || null
        };

        try {
            const response = await fetch('/user/wishlist', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(wishlistItem)
            });

            const data = await response.json();

            if (!response.ok) {
                Swal.fire({
                    icon: 'warning',
                    text: data.error || 'Failed to add to wishlist',
                    showConfirmButton: false,
                    timer: 2000
                });
            } else {
                Swal.fire({
                    icon: 'success',
                    text: 'Added to Wishlist',
                    showConfirmButton: false,
                    timer: 1500
                });

                addToWishlistBtn.querySelector('.wishlist-text').textContent = 'In Wishlist';
                addToWishlistBtn.classList.remove('btn-outline-secondary');
                addToWishlistBtn.classList.add('btn-success');
                addToWishlistBtn.disabled = true;
            }
        } catch (error) {
            console.log(error)
            Swal.fire({
                icon: 'error',
                text: 'An error occurred while adding to wishlist',
                showConfirmButton: false,
                timer: 2000
            });
        }
    });

    // (async () => {
    //     try {
    //         const userId = document.getElementById('userId').value;
    //         if (userId) {
    //             const response = await fetch(`/user/wishlist/check?userId=${userId}&productId=${addToWishlistBtn.dataset.productId}`);
    //             const data = await response.json();
    //             if (data.isInWishlist) {
    //                 addToWishlistBtn.querySelector('.wishlist-text').textContent = 'In Wishlist';
    //                 addToWishlistBtn.classList.remove('btn-outline-secondary');
    //                 addToWishlistBtn.classList.add('btn-success');
    //                 addToWishlistBtn.disabled = true;
    //             }
    //         }
    //     } catch (error) {
    //         console.error('Error checking wishlist status:', error);
    //     }
    // })();


    // Handle review submission
    document.getElementById('reviewForm').addEventListener('submit', async (e) => {
        e.preventDefault();

        const userId = document.getElementById('userId').value;
        const productId = document.getElementById('productdbId').value;
        const name = document.getElementById('reviewName').value;
        const star = document.getElementById('reviewStar').value;
        const comment = document.getElementById('reviewComment').value;

        const reviewDetails = { userId, productId, name, star, comment };

        try {
            const response = await fetch('/user/review', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(reviewDetails)
            });

            const data = await response.json();
            if (!response.ok) {
                Swal.fire({
                    icon: 'warning',
                    text: data.error,
                    showConfirmButton: false,
                    timer: 2000
                });
            } else {
                Swal.fire({
                    icon: 'success',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 2000
                }).then(() => {
                    window.location.reload();
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                text: 'An error occurred',
                showConfirmButton: false,
                timer: 2000
            });
        }
    });


    if (variants && variants.length > 0) {
 
        const initialColorButton = Array.from(colorButtons).find(btn => btn.classList.contains('active'));
        const initialWeightButton = Array.from(weightButtons).find(btn => btn.classList.contains('active'));

        if (initialColorButton) {
            selectedColorInput.value = initialColorButton.dataset.color;
        }
        if (initialWeightButton) {
            selectedWeightInput.value = initialWeightButton.dataset.weight;
        }

        if (!selectedColorInput.value || !selectedWeightInput.value) {
            const firstVariant = variants[0];
            if (!selectedColorInput.value && firstVariant.color) {
                selectedColorInput.value = firstVariant.color;
                colorButtons[0]?.classList.add('active');
            }
            if (!selectedWeightInput.value && firstVariant.weight) {
                selectedWeightInput.value = firstVariant.weight;
                weightButtons[0]?.classList.add('active');
            }
        }

        updateVariantDisplay();
    }
});

 </script>
</body>