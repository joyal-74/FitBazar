<body class="bg-violet">

    <!-- Navbar -->
    <%- include('../partials/header') %>


    <!-- Sidebar + Main Content Wrapper -->
    <div class="container-fluid w-100 sidebar-header">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'products' }) %>
            
            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-9 px-md-4 py-4 mx-auto">
                <h1 class="h3 mb-4 fw-bold">Product Management</h1>

                <!-- Filters and Add Product Button -->
                <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
                    <!-- Filter by Category -->
                    <div class="d-flex gap-2">
                        <!-- Filter by Category -->
                        <div class="flex-grow-1" style="max-width: 150px;">
                            <select id="categoryFilter" class="form-select">
                                <option value="all" <%= selectedCategory === "all" ? "selected" : "" %>>Category ⇅</option>
                                <% cat.forEach(category => { %>
                                    <option value="<%= category.name %>" <%= selectedCategory === category.name ? "selected" : "" %>><%= category.name %></option>
                                <% }) %>
                            </select>
                        </div>
                    
                        <!-- Filter by Stock -->
                        <div class="flex-grow-1" style="max-width: 120px;">
                            <select id="stockFilter" class="form-select">
                                <option value="all" <%= selectedStock === "all" ? "selected" : "" %>>Stock ⇅</option>
                                <option value="1" <%= selectedStock === "1" ? "selected" : "" %>>In Stock</option>
                                <option value="2" <%= selectedStock === "2" ? "selected" : "" %>>Out of Stock</option>
                            </select>
                        </div>
                    
                        <!-- Filter by Status -->
                        <div class="flex-grow-1" style="max-width: 160px;">
                            <select id="statusFilter" class="form-select">
                                <option value="all" <%= selectedStatus === "all" ? "selected" : "" %>>Status ⇅</option>
                                <option value="1" <%= selectedStatus === "1" ? "selected" : "" %>>Active</option>
                                <option value="2" <%= selectedStatus === "2" ? "selected" : "" %>>Hidden</option>
                            </select>
                        </div>
                    </div>
                    
                    <!-- Search Bar -->
                    <form class="d-flex search-container flex-grow-1" style="max-width: 300px;" id="searchForm">
                        <input id="searchInput" class="form-control me-2" type="search" placeholder="Search product name...." 
                            aria-label="Search" value="<%= searchQuery || '' %>">
                        <button class="btn" type="submit" style="background-color: #5b3f64;">
                            <i class="fas fa-search text-white"></i>
                        </button>
                    </form>

                    <!-- Add Product Button -->
                    <div class="text-end">
                        <a class="btn admin-btns add-product-btn" href="/admin/newProducts">
                            + New
                        </a>
                    </div>
                </div>


                <!-- Products Table -->
                <div class="card">
                    <div class="card-body p-0 m-0">
                        <div class="table-responsive">
                            <table class="table table-hover text-center">
                                <thead>
                                    <tr>
                                        <th>Product ID</th>
                                        <th>Name</th>
                                        <th>Category</th>
                                        <th>Price</th>
                                        <th>Total Stock</th>
                                        <th>Added On</th>
                                        <th>Status</th>
                                        <th>Offer</th> <!-- New Column for Offers -->
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% product.forEach(product => { %>
                                        <tr>
                                            <td><%= product.productId %></td>
                                            <td class="text-start"><%= product.name.length > 25 ? product.name.slice(0, 25) + '...' : product.name %></td>
                                            <td><%= product.category?.name || "No Category" %></td>
                                            <td>₹ <%= product.price.toFixed(2) %></td>
                                            <td>
                                                <% 
                                                    const totalStock = product.variants.reduce((sum, variant) => sum + variant.stock, 0); 
                                                    if (totalStock > 0) { 
                                                %>
                                                    <span class="badge stock-color">In Stock (<%= totalStock %>)</span>
                                                <% } else { %>
                                                    <span class="badge no-stock-color">Out of Stock</span>
                                                <% } %>
                                            </td>
                                            <td><%= new Date(product.createdAt).toLocaleDateString("en-US") %></td>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <p style="color: #5b3f64; margin: 0;" class="<%= product.visibility ? '' : 'd-none' %>">
                                                        <i class="fa-solid fa-eye"></i>
                                                    </p>
                                                    <p style="color: #9c9999; margin: 0;" class="<%= product.visibility ? 'd-none' : '' %>">
                                                        <i class="fa-solid fa-eye-slash"></i>
                                                    </p>
                                                </div>
                                            </td>
                                            <!-- Offer Column -->
                                            <td>
                                                <% if (product.productOffer > 0) { %>
                                                    <span class="badge" style="background-color: #ff8000; border-radius: 28px; color: rgb(255, 255, 255);"><%= product.productOffer %>% Off</span>
                                                    <button class="btn btn-sm remove-offer-btn p-0 m-0 text-danger" style="border-radius: 50%; font-size: 1rem;" data-product-id="<%= product.productId %>">
                                                        x
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn badge btn-sm add-offer-btn" style="background-color: #0e7a86; color: #fff; border-radius: 28px;" data-product-id="<%= product.productId %>">
                                                        Add Offer
                                                    </button>
                                                <% } %>
                                            </td>
                                            <td>
                                                <a href="/admin/updateProducts/<%= product.productId %>" style="color: #5b3f64;" class="btn btn-sm edit-btn me-2">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </a>
                                            </td>
                                        </tr>
                                    <% }) %>
                                </tbody>
                            </table>
                        </div>                    
                    </div>               
                </div>

                <!-- Add Offer Modal -->
                <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="addOfferModalLabel">Add Offer</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <form id="addOfferForm">
                                    <div class="mb-3">
                                        <label for="discountInput" class="form-label">Discount Percentage (%)</label>
                                        <input type="number" class="form-control" id="discountInput" placeholder="Enter discount (e.g., 10)" min="1" max="100" step="1" required>
                                        <div class="invalid-feedback">
                                            Please enter a valid discount percentage (1-100).
                                        </div>
                                    </div>
                                    <input type="hidden" id="productIdInput" name="productId">
                                </form>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="button" class="btn admin-btns" id="submitOfferBtn" style="background-color: #5b3f64; color: white;">Add Offer</button>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Pagination -->
                <div class="d-flex justify-content-center mt-3 ">
                    <nav>
                        <ul class="pagination pagination-sm">
                            <!-- Previous Page Button -->
                            <% if (currentPage > 1) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                        <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>
                            <% } %>

                            <!-- Page Numbers -->
                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                </li>
                            <% } %>

                            <!-- Next Page Button -->
                            <% if (currentPage < totalPages) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                        <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>
            </main>
        </div>
    </div>
    <script>
        function applyFilters() {
            const category = document.getElementById('categoryFilter').value;
            const stock = document.getElementById('stockFilter').value;
            const status = document.getElementById('statusFilter').value;
            const searchQuery = document.getElementById('searchInput').value.trim();
    
            let queryParams = new URLSearchParams();
            if (category !== "all") queryParams.set("category", category);
            if (stock !== "all") queryParams.set("stock", stock);
            if (status !== "all") queryParams.set("status", status);
            if (searchQuery) queryParams.set("query", searchQuery);
    
            window.location.href = `/admin/products?${queryParams.toString()}`;
        }
    
        // Event listeners for filters
        document.getElementById('categoryFilter').addEventListener('change', applyFilters);
        document.getElementById('stockFilter').addEventListener('change', applyFilters);
        document.getElementById('statusFilter').addEventListener('change', applyFilters);
        document.getElementById('searchForm').addEventListener('submit', function (event) {
            event.preventDefault();
            applyFilters();
        });
    
        // Add Offer Button Click Handler with Bootstrap Modal
        document.querySelectorAll('.add-offer-btn').forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-product-id');
                const modal = new bootstrap.Modal(document.getElementById('addOfferModal'));
                const productIdInput = document.getElementById('productIdInput');
                const discountInput = document.getElementById('discountInput');
    
                // Reset form and set productId
                discountInput.value = '';
                discountInput.classList.remove('is-invalid');
                productIdInput.value = productId;
    
                // Show the modal
                modal.show();
            });
        });
    
        // Submit Offer Form Handler with Async/Await
        document.getElementById('submitOfferBtn').addEventListener('click', async function () {
            const discountInput = document.getElementById('discountInput');
            const productId = document.getElementById('productIdInput').value;
            const discount = discountInput.value.trim();
    
            // Validate input
            if (!discount || isNaN(discount) || discount <= 0 || discount > 100) {
                discountInput.classList.add('is-invalid');
                return;
            } else {
                discountInput.classList.remove('is-invalid');
            }
    
            try {
                const response = await fetch('/admin/products/offer', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId, discount }),
                });
    
                const data = await response.json();
    
                if (response.ok) {
                    const modal = bootstrap.Modal.getInstance(document.getElementById('addOfferModal'));
                    modal.hide();
                    await Swal.fire({
                        text: 'Offer added successfully',
                        icon: 'success',
                        showConfirmButton: false,
                        timer : 2000
                    });
                    location.reload();
                } else {
                    await Swal.fire({
                        text: data.message,
                        icon: 'error',
                        showConfirmButton: false,
                        timer : 2000
                    });
                }
            } catch (error) {
                await Swal.fire('Error', 'An error occurred: ' + error.message, 'error');
            }
        });
    
        // Remove Offer Button Click Handler 
        document.querySelectorAll('.remove-offer-btn').forEach(button => {
            button.addEventListener('click', async function () {
                const productId = this.getAttribute('data-product-id');
    
                const result = await Swal.fire({
                    text: 'Are you sure you want to remove the offer for this product?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Yes, Remove',
                    cancelButtonText: 'No, Cancel'
                });
    
                if (result.isConfirmed) {
                    try {
                        const response = await fetch('/admin/products/offer', {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({ productId }),
                        });
    
                        const data = await response.json();
    
                        if (response.ok) {
                            await Swal.fire({
                                text: 'Offer deleted successfully',
                                icon: 'success',
                                showConfirmButton: false,
                                timer : 2000
                            });
                            location.reload();
                        } else {
                            await Swal.fire({
                                text: data.error || 'Offer deletion failed',
                                icon: 'warning',
                                showConfirmButton: false,
                                timer : 2000
                            });
                        }
                    } catch (error) {
                        await Swal.fire({
                                text: data.error || 'Internal Server error',
                                icon: 'error',
                                showConfirmButton: false,
                                timer : 2000
                            });
                    }
                }
            });
        });
    </script>
</body>