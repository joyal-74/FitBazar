<head>
    <style>
        .image-upload-slot {
            position: relative;
            flex: 1;
            aspect-ratio: 1 / 1;
            border: 2px dashed #ddd;
            border-radius: 8px;
            overflow: hidden;
            background: #f8f9fa;
            transition: all 0.3s;
            width: 85px;
        }

        .image-upload-dropzone {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            cursor: pointer;
            transition: opacity 0.3s;
        }

        .image-upload-dropzone.dragover {
            background: #e9ecef;
            border-color: #4a00e0;
        }

        .image-upload-dropzone i {
            font-size: 20px;
            color: #4a00e0;
        }

        .image-upload-dropzone p {
            font-size: 12px;
            color: #666;
        }

        .image-preview {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            display: none;
        }

        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            border-radius: 6px;
        }

        .image-preview .remove-image-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            width: 20px;
            height: 20px;
            background: #dc3545;
            color: white;
            border: none;
            border-radius: 50%;
            font-size: 12px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0.8;
            transition: opacity 0.3s;
        }

        .image-preview .remove-image-btn:hover {
            opacity: 1;
        }

        .image-upload-slot.filled .image-upload-dropzone {
            display: none;
        }

        .image-upload-slot.filled .image-preview {
            display: block;
        }

        .avatar {
            padding: 6px 12px;
            border-radius: 20px;
            transition: background-color 0.2s;
        }

        .avatar:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .dropdown-menu {
            min-width: 180px;
            background: #ffffff;
        }

        .dropdown-item,
        .dropdown-item-text {
            font-size: 0.9rem;
            color: #333;
        }

        .dropdown-item:hover {
            background-color: #f8f9fa;
            color: #3e29a8;
        }

        @media (max-width: 768px) {
            .navbar-brand span {
                font-size: 20px;
            }
            
            .avatar {
                padding: 6px 8px;
            }
        }
    </style>
</head>

<body class="bg-violet">
    
    <%- include('../partials/header') %>
  
    <div class="container-fluid custom-sm-container w-100 sidebar-header">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'categories' }) %>

            <main class="col-md-10 col-lg-9 px-md-4 py-4 mx-auto px-3">
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3">
                    <h1 class="h3 mb-0 fw-bold">Categories</h1>
                    <button type="button" class="btn btn-sm d-flex align-items-center gap-1 text-white" style="background-color: #5b3f64;" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                        <i class="fa-solid fa-plus"></i> 
                        <span class="d-none d-sm-inline">New</span>
                    </button>
                </div>

                <!-- Filters and Add Product Button -->
                <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
                    <div class="d-flex gap-2">
                        <div class="flex-grow-1" style="max-width: 180px;">
                            <select class="form-select filter-select">
                                <option disabled hidden>Filter ⇅</option>
                                <option value="1" <%= selectedFilter === undefined ? 'selected' : '' %>>All</option>
                                <option value="true" <%= selectedFilter === 'true' ? 'selected' : '' %>>Active</option>
                                <option value="false" <%= selectedFilter === 'false' ? 'selected' : '' %>>Blocked</option>
                            </select>
                        </div>
                    </div>

                    <div class="d-flex gap-4 align-items-center">
                        <form class="d-flex search-container flex-grow-1" style="max-width: 300px;" id="searchForm">
                            <div class="input-group">
                                <input id="searchInput" class="form-control" type="search" placeholder="Search category name...." aria-label="Search" value="<%= searchQuery || '' %>">
                                <button class="btn" type="submit" style="background-color: #5b3f64;">
                                    <i class="fas fa-search text-white"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Add Category Modal -->
                <div class="modal fade" id="addCategoryModal" tabindex="-1" aria-labelledby="addCategoryModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                                <h5 class="modal-title fw-bold" id="addCategoryModalLabel">Add Category</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form action="/admin/categories" id="addCategoryForm" enctype="multipart/form-data">
                                    <div class="mb-4">
                                        <label for="addName" class="form-label fw-semibold">Category Name</label>
                                        <input type="text" class="form-control rounded-3" id="addName" name="addName" placeholder="Enter Category Name">
                                        <div id="addNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-25">
                                            <label for="addThumbnail" class="form-label fw-semibold">Thumbnail</label>
                                            <div class="image-upload-slot" id="addThumbnailUploadSlot">
                                                <div class="image-upload-dropzone" onclick="document.getElementById('addThumbnail').click();">
                                                    <i class="fa-solid fa-upload"></i>
                                                    <p class="mb-0">Add Image</p>
                                                    <input type="file" class="d-none" id="addThumbnail" name="addThumbnail" accept="image/*" onchange="previewThumbnail(event)">
                                                </div>
                                                <div class="image-preview">
                                                    <img id="addThumbnailPreview" src="#" alt="Preview">
                                                    <button type="button" class="remove-image-btn" onclick="removeAddThumbnail()">×</button>
                                                </div>
                                            </div>
                                            <div id="addThumbError" class="position-absolute d-flex" style="font-size: 0.8em; color: #ff0101;">
                                                <div></div>
                                                <span style="margin-left: 50px;"></span>
                                            </div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addDescription" class="form-label fw-semibold">Category Description</label>
                                            <textarea class="form-control rounded-3" id="addDescription" name="addDescription" rows="3" placeholder="Enter Category Description"></textarea>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end">
                                        <div class="w-50 me-2">
                                            <label for="addStatus" class="form-label fw-semibold">Visibility Status</label>
                                            <select class="form-select rounded-3" id="addStatus" name="addStatus">
                                                <option value="Active">Active</option>
                                                <option value="Inactive">Inactive</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #5b3f64;">
                                            <i class="fa fa-plus-circle me-2"></i> Add Category
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Edit Category Modal -->
                <div class="modal fade" id="editCategoryModal" tabindex="-1" aria-labelledby="editCategoryModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                                <input type="hidden" id="originalCategoryName" name="originalCategoryName">
                                <h5 class="modal-title fw-bold" id="editCategoryModalLabel">Update Category</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form id="editCategoryForm" enctype="multipart/form-data" class="needs-validation" novalidate>
                                    <div class="mb-4">
                                        <label for="editName" class="form-label fw-semibold">Category Name</label>
                                        <input type="text" class="form-control rounded-3" id="editName" name="editName" placeholder="Enter Category Name">
                                        <div id="editNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    <div class="d-flex w-100 gap-5">
                                        <div class="mb-4">
                                            <label for="editThumbnail" class="form-label fw-semibold">Thumbnail</label>
                                            <div class="image-upload-slot" id="thumbnailUploadSlot">
                                                <div class="image-upload-dropzone" onclick="document.getElementById('editThumbnail').click();">
                                                    <i class="fa-solid fa-upload"></i>
                                                    <p class="mb-0">Add Image</p>
                                                    <input type="file" class="d-none" id="editThumbnail" name="editThumbnail" accept="image/*" onchange="previewThumbnail(event)">
                                                </div>
                                                <div class="image-preview">
                                                    <img id="thumbnailPreview" src="#" alt="Preview">
                                                    <button type="button" class="remove-image-btn" onclick="removeThumbnail()">×</button>
                                                    <input type="hidden" id="thumbnailState" name="thumbnailState" value="true">
                                                </div>
                                            </div>
                                            <div id="editThumbError" class="position-absolute d-flex" style="font-size: 0.8em; color: #ff0101;">
                                                <div></div>
                                                <span style="margin-left: 50px;"></span>
                                            </div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editDescription" class="form-label fw-semibold">Category Description</label>
                                            <textarea class="form-control rounded-3" id="editDescription" name="editDescription" rows="3" placeholder="Enter Category Description"></textarea>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end">
                                        <div class="w-50 me-2">
                                            <label for="editStatus" class="form-label fw-semibold">Visibility Status</label>
                                            <select class="form-select rounded-3" id="editStatus" name="editStatus">
                                                <option value="Active">Active</option>
                                                <option value="Inactive">Inactive</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #5b3f64;">
                                            <i class="fa fa-check-circle me-2"></i> Update Category
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Products Table and Pagination code remains unchanged -->
                 <div class="d-none d-md-block">
                    <div class="card">
                        <div class="card-body p-0 m-0">
                            <div class="table-responsive">
                                <table class="table table-hover text-center">
                                    <thead>
                                        <tr>
                                            <th class="text-start ps-5">Category Info</th>
                                            <th>Description</th>
                                            <th>Item Count</th>
                                            <th>Created Date</th>
                                            <th>Status</th>
                                            <th>Offer</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% cat.reverse().forEach((category, index) => { %>
                                        <tr>
                                            <td class="text-start ps-4"><img src="<%= category.thumbnail || 'default.png' %>" style="border-radius: 50%;" alt="thumb" width="30" height="30"> <%= category.name%></td>
                                            <td class="category-description"><%= category.description %></td>
                                            <td><%= category.itemsCount %></td>
                                            <td><%= new Date(category.createdAt).toLocaleString("en-IN", { 
                                                day: "2-digit", 
                                                month: "short", 
                                                year: "numeric", 
                                                timeZone: "Asia/Kolkata"
                                            }) %></td>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <p style="color: #5b3f64; margin: 0;" class="<%= category.visibility ? '' : 'd-none' %>">
                                                        <i class="fa-solid fa-eye"></i>
                                                    </p>   
                                                    <p style="color: #9c9999; margin: 0;" class="<%= category.visibility ? 'd-none' : '' %>">
                                                        <i class="fa-solid fa-eye-slash"></i>
                                                    </p>
                                                </div>
                                            </td>
                                            <td>
                                                <% if (category.offer > 0) { %>
                                                    <span class="badge" style="background-color: #ff8000; border-radius: 28px; color: rgb(255, 255, 255);"><%= category.offer %>% Off</span>
                                                    <button class="btn btn-sm remove-offer-btn p-0 m-0 text-danger" style="border-radius: 50%; font-size: 1rem;" data-category-id="<%= category._id %>">
                                                        x
                                                    </button>
                                                <% } else { %>
                                                    <button class="btn badge btn-sm add-offer-btn" style="background-color: #0e7a86; color: #fff; border-radius: 28px;" data-category-id="<%= category._id %>">
                                                        Add Offer
                                                    </button>
                                                <% } %>
                                            </td>
                                            <td>
                                                <button 
                                                    class="btn btn-sm me-2" 
                                                    style="color: #5b3f64;"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#editCategoryModal"
                                                    onclick="openEditModal(
                                                        '<%= category.name %>', 
                                                        '<%= category.description %>', 
                                                        '<%= category.visibility %>',
                                                        '<%= category.thumbnail %>'
                                                    )">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

    
                    <div class="d-flex justify-content-center mt-3">
                        <nav>
                            <ul class="pagination pagination-sm">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                            <span aria-hidden="true">«</span>
                                        </a>
                                    </li>
                                <% } %>
                                <% for(let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                            <span aria-hidden="true">»</span>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                 </div>

                 <!-- mobile card -->

                 <div class="d-block d-md-none">
                    <% cat.reverse().forEach((category, index) => { %>
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body p-3">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <div class="d-flex align-items-center">
                                        <img src="<%= category.thumbnail || 'default.png' %>" 
                                            class="rounded-circle me-2" 
                                            alt="thumb" 
                                            width="40" 
                                            height="40">
                                        <h6 class="mb-0 fw-bold"><%= category.name %></h6>
                                    </div>
                                    <div>
                                        <% if (category.offer > 0) { %>
                                            <span class="badge me-1" style="background-color: #ff8000; font-size: 0.7rem; color: white;">
                                                <%= category.offer %>% Off
                                            </span>
                                        <% } %>
                                        <span class="badge <%= category.visibility ? 'bg-success' : 'bg-secondary' %>" style=" font-size: 0.7rem;">
                                            <%= category.visibility ? 'Active' : 'Inactive' %>
                                        </span>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <div class="text-muted small">Description:</div>
                                    <div class="text-end small"><%= category.description || 'N/A' %></div>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <div class="text-muted small">Items:</div>
                                    <div class="text-end small"><%= category.itemsCount %></div>
                                </div>

                                <div class="d-flex justify-content-between mb-2">
                                    <div class="text-muted small">Created:</div>
                                    <div class="text-end small">
                                        <%= new Date(category.createdAt).toLocaleString("en-IN", { 
                                            day: "2-digit", 
                                            month: "short", 
                                            year: "numeric", 
                                            timeZone: "Asia/Kolkata"
                                        }) %>
                                    </div>
                                </div>

                                <div class="d-flex justify-content-between pt-2 border-top">
                                    <div>
                                        <% if (category.offer > 0) { %>
                                            <button class="btn btn-sm remove-offer-btn p-0 me-2 text-danger" 
                                                    data-category-id="<%= category._id %>">
                                                Remove Offer
                                            </button>
                                        <% } else { %>
                                            <button class="btn btn-sm add-offer-btn p-0 me-2" 
                                                    style="color: #0e7a86;"
                                                    data-category-id="<%= category._id %>">
                                                Add Offer
                                            </button>
                                        <% } %>
                                    </div>
                                    <div>
                                        <button class="btn btn-sm me-2" 
                                                style="color: #5b3f64;"
                                                data-bs-toggle="modal" 
                                                data-bs-target="#editCategoryModal"
                                                onclick="openEditModal(
                                                    '<%= category.name %>', 
                                                    '<%= category.description %>', 
                                                    '<%= category.visibility %>',
                                                    '<%= category.thumbnail %>'
                                                )">
                                            <i class="fa-solid fa-pen-to-square"></i> Edit
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% }) %>

                    <!-- Pagination for mobile -->
                    <div class="d-flex justify-content-center mt-3">
                        <nav>
                            <ul class="pagination pagination-sm">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                            <span aria-hidden="true">«</span>
                                        </a>
                                    </li>
                                <% } %>
                                <% for(let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                            <span aria-hidden="true">»</span>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                </div>
            </main>

            <!-- offer add modal -->
            <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content shadow-lg border-0 rounded-3">
                        <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                            <input type="hidden" id="originalCategoryName" name="originalCategoryName">
                            <h5 class="modal-title fw-bold" id="addOfferModalLabel">Add Category Offer</h5>
                            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body p-4">
                            <form id="addOfferForm" class="needs-validation" novalidate>
                                <div class="mb-4">
                                    <label for="discountInput" class="form-label fw-semibold">Discount Percentage (%)</label>
                                    <input type="number" class="form-control rounded-3" id="discountInput" name="discount" placeholder="Enter discount (e.g., 10)" min="1" max="100" step="1" required>
                                    <div id="discountError" class="invalid-feedback" style="font-size: 0.8em; color: #ff0101;">
                                        Please enter a valid discount percentage (1-100).
                                    </div>
                                </div>
                                <input type="hidden" id="categoryIdInput" name="categoryId">
                                <div class="d-flex justify-content-end">
                                    <button type="button" class="btn px-4 py-2 text-white shadow-sm" id="submitOfferBtn" style="background-color: #5b3f64;">
                                        <i class="fa fa-plus-circle me-2"></i> Add Offer
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    

    <script>
        function openEditModal(name, description, visibility, thumbnail) {
            document.getElementById("originalCategoryName").value = name;
            document.getElementById("editName").value = name;
            document.getElementById("editDescription").value = description;
            document.getElementById("editStatus").value = visibility.toString() === "true" ? "Active" : "Inactive";

            const preview = document.getElementById("thumbnailPreview");
            const uploadSlot = document.getElementById("thumbnailUploadSlot");
            const thumbnailState = document.getElementById("thumbnailState");

            if (thumbnail) {
                preview.src = thumbnail;
                uploadSlot.classList.add('filled');
                thumbnailState.value = "true";
            } else {
                preview.src = '#';
                uploadSlot.classList.remove('filled');
                thumbnailState.value = "false";
            }

            document.getElementById("editDescription").dispatchEvent(new Event("input"));
        }

        function previewThumbnail(event) {
            const file = event.target.files[0];
            const inputId = event.target.id;
            const isAddModal = inputId === 'addThumbnail';
            
            const previewImage = document.getElementById(
                isAddModal ? 'addThumbnailPreview' : 'thumbnailPreview'
            );
            const uploadSlot = document.getElementById(
                isAddModal ? 'addThumbnailUploadSlot' : 'thumbnailUploadSlot'
            );
            const thumbnailState = document.getElementById('thumbnailState');

            if (!file) return;

            const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
            if (!validImageTypes.includes(file.type)) {
                alert('Please upload a valid image file (JPEG, PNG, or GIF)');
                return;
            }

            const reader = new FileReader();
            reader.onload = function(e) {
                previewImage.src = e.target.result;
                uploadSlot.classList.add('filled');
                thumbnailState.value = "true"; 
            };
            reader.onerror = function() {
                console.error('Error reading file');
                alert('Error loading image preview');
            };
            reader.readAsDataURL(file);
        }

        function removeThumbnail() {
            const editThumbnail = document.getElementById('editThumbnail');
            const preview = document.getElementById('thumbnailPreview');
            const uploadSlot = document.getElementById('thumbnailUploadSlot');
            const thumbnailState = document.getElementById('thumbnailState');

            editThumbnail.value = '';
            preview.src = '#';
            uploadSlot.classList.remove('filled');
            thumbnailState.value = "false";
        }

        function removeAddThumbnail() {
            const addThumbnail = document.getElementById('addThumbnail');
            const preview = document.getElementById('addThumbnailPreview');
            const uploadSlot = document.getElementById('addThumbnailUploadSlot');
            addThumbnail.value = '';
            preview.src = '#';
            uploadSlot.classList.remove('filled');
        }

        document.addEventListener("DOMContentLoaded", function () {
            document.getElementById("editCategoryForm").addEventListener("submit", async function (e) {
                e.preventDefault();
                const orgName = document.getElementById("originalCategoryName").value.trim();
                const editName = document.getElementById("editName").value.trim();
                const editDescription = document.getElementById("editDescription").value.trim();
                const editThumbnail = document.getElementById("editThumbnail").files[0];
                const thumbnailState = document.getElementById("thumbnailState").value;

                let errors = {
                    editName: document.getElementById("editNameError"),
                    editThumbnail: document.querySelector("#editThumbError div"),
                    editDescription: document.querySelector("#editThumbError span")
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!editName) {
                    errors.editName.innerText = "Name is required.";
                    hasError = true;
                }
                if (!editDescription) {
                    errors.editDescription.innerText = "Description is required.";
                    hasError = true;
                }
                if (thumbnailState === "false") {
                    errors.editThumbnail.innerText = "Thumbnail is required.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = new FormData(event.target);
                formData.append('orgName', orgName);

                try {
                    const response = await fetch("/admin/categories", {
                        method: "PUT",
                        body: formData
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            text: "Category updated successfully!",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            text: "Category updation failed!",
                            showConfirmButton: false,
                            timer: 2000
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        text: "An unexpected error occurred.",
                        showConfirmButton: false,
                        timer: 2000
                    });
                }
            });

            document.getElementById("addCategoryForm")?.addEventListener("submit", async (event) => {
                event.preventDefault();
                const addName = document.getElementById("addName").value.trim();
                const addDescription = document.getElementById("addDescription").value.trim();
                const addThumbnail = document.getElementById("addThumbnail").files[0];

                let errors = {
                    addName: document.getElementById("addNameError"),
                    addThumbnail: document.querySelector("#addThumbError div"),
                    addDescription: document.querySelector("#addThumbError span")
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!addName) {
                    errors.addName.innerText = "Name is required.";
                    hasError = true;
                }
                if (!addThumbnail) {
                    errors.addThumbnail.innerText = "Thumbnail is required.";
                    hasError = true;
                }
                if (!addDescription) {
                    errors.addDescription.innerText = "Description is required.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = new FormData(document.getElementById("addCategoryForm"));

                try {
                    const response = await fetch("/admin/categories", {
                        method: "POST",
                        body: formData,
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            position: "top-center",
                            icon: "success",
                            text: "Category added successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            text: result.error || "An unexpected error occurred.",
                            showConfirmButton: false,
                            timer: 2000,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        title: "Oops!",
                        text: "Something went wrong. Please try again.",
                    });
                }
            });

            document.getElementById('searchForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                const searchQuery = document.getElementById('searchInput').value.trim();
                try {
                    if (searchQuery) {
                        window.location.href = `/admin/categories?q=${encodeURIComponent(searchQuery)}`;
                    } else if (searchQuery == "") {
                        window.location.href = '/admin/categories'; 
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            });

            document.querySelector('.filter-select').addEventListener('change', function () {
                const filterValue = this.value;
                let query = '';
                if (filterValue === 'true') {
                    query = '?visibility=true';
                } else if (filterValue === 'false') {
                    query = '?visibility=false';
                }
                window.location.href = `/admin/categories/filter${query}`;
            });

            document.querySelectorAll(".category-description").forEach((desc) => {
                const maxLength = 30;
                if (desc.textContent.length > maxLength) {
                    desc.textContent = desc.textContent.substring(0, maxLength) + "...";
                }
            });

            // Add Offer Button Click Handler with Bootstrap Modal
            document.querySelectorAll('.add-offer-btn').forEach(button => {
                button.addEventListener('click', function () {
                    const categoryId = this.getAttribute('data-category-id');
                    const modal = new bootstrap.Modal(document.getElementById('addOfferModal'));
                    const categoryIdInput = document.getElementById('categoryIdInput');
                    const discountInput = document.getElementById('discountInput');
        
                    // Reset form and set productId
                    discountInput.value = '';
                    discountInput.classList.remove('is-invalid');
                    categoryIdInput.value = categoryId;
        
                    // Show the modal
                    modal.show();
                });
            });
        
            // Submit Offer Form Handler with Async/Await
            document.getElementById('submitOfferBtn').addEventListener('click', async function () {
                const discountInput = document.getElementById('discountInput');
                const categoryId = document.getElementById('categoryIdInput').value;
                const discount = discountInput.value.trim();
        
                // Validate input
                if (!discount || isNaN(discount) || discount <= 0 || discount > 100) {
                    discountInput.classList.add('is-invalid');
                    return;
                } else {
                    discountInput.classList.remove('is-invalid');
                }
        
                try {
                    const response = await fetch('/admin/categories/offer', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ categoryId, discount }),
                    });
        
                    const data = await response.json();
        
                    if (response.ok) {
                        const modal = bootstrap.Modal.getInstance(document.getElementById('addOfferModal'));
                        modal.hide();
                        await Swal.fire({
                            text: 'Offer added successfully',
                            icon: 'success',
                            showConfirmButton: false,
                            timer : 2000
                        });
                        location.reload();
                    } else {
                        await Swal.fire({
                            text: data.message,
                            icon: 'error',
                            showConfirmButton: false,
                            timer : 2000
                        });
                    }
                } catch (error) {
                    await Swal.fire('Error', 'An error occurred: ' + error.message, 'error');
                }
            });
        
            // Remove Offer Button Click Handler 
            document.querySelectorAll('.remove-offer-btn').forEach(button => {
                button.addEventListener('click', async function () {
                    const categoryId = this.getAttribute('data-category-id');
        
                    const result = await Swal.fire({
                        text: 'Are you sure you want to remove the offer for this category?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Yes, Remove',
                        cancelButtonText: 'No, Cancel'
                    });
        
                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/admin/categories/offer', {
                                method: 'PATCH',
                                headers: {
                                    'Content-Type': 'application/json',
                                },
                                body: JSON.stringify({ categoryId }),
                            });
        
                            const data = await response.json();
        
                            if (response.ok) {
                                await Swal.fire({
                                    text: 'Offer deleted successfully',
                                    icon: 'success',
                                    showConfirmButton: false,
                                    timer : 2000
                                });
                                location.reload();
                            } else {
                                await Swal.fire({
                                    text: data.error || 'Offer deletion failed',
                                    icon: 'warning',
                                    showConfirmButton: false,
                                    timer : 2000
                                });
                            }
                        } catch (error) {
                            await Swal.fire({
                                    text: data.error || 'Internal Server error',
                                    icon: 'error',
                                    showConfirmButton: false,
                                    timer : 2000
                                });
                        }
                    }
                });
            });
        });
        
    </script>
</body>