<body class="bg-violet">
    <!-- Navbar -->
    <%- include('../partials/header') %>

    <!-- Sidebar + Main Content Wrapper -->
    <div class="container-fluid w-100 sidebar-header">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'orders' }) %>
            
            <!-- Main Content -->
            <main class="col-md-12 ms-sm-auto col-lg-9 px-md-2 py-4 mx-auto">
                <h1 class="h3 mb-4 fw-bold text-dark">Order Details</h1>
                <div class="row">
                    <!-- Order Summary -->
                    <div class="col-md-12">
                        <div class="card mb-4 border-0" style="border-radius: 15px; overflow: hidden;">
                            <div class="card-header text-white py-3">
                                <h5 class="card-title mb-0 fw-bold">#Order - <%= order.orderId %></h5>
                            </div>
                            <div class="card-body p-4" style="background: #fff;">
                                <div class="row mb-3">
                                    <div class="">
                                        <% 
                                            let total = 0; 
                                            order.orderItems.forEach(item => {
                                                total += item.quantity * (item.discountPrice || 0);
                                            });
                                        %>
                                        <div class="d-flex justify-content-between align-items-center">
                                            <p class="mb-2"><strong class="text-muted">Order Date:</strong> <%= new Date(order.createdAt).toLocaleDateString('en-GB') %></p>
                                            <p class="fw-bold me-4">Grand Total : ₹ <%= total %></p>
                                        </div>
                                        <p class="mb-2"><strong class="text-muted">Payment Method:</strong> 
                                            <% 
                                                let paymentLabel = order.paymentMethod;
                                                if (order.paymentMethod === 'cod') {
                                                    paymentLabel = 'Cash on Delivery';
                                                } else if (order.paymentMethod === 'netbanking') {
                                                    paymentLabel = 'Net Banking';
                                                } else if (order.paymentMethod === 'wallet') {
                                                    paymentLabel = 'FitBazar Wallet';
                                                } else if (order.paymentMethod === 'card') {
                                                    paymentLabel = 'Credit/Debit Card';
                                                }
                                            %>
                                            <%= paymentLabel %>
                                        </p>                                        
                
                                    </div>
                                </div>
                                <!-- Product Details Table -->
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th scope="col">Product Name</th>
                                                <th scope="col">Status</th>
                                                <th scope="col">Unit Price</th>
                                                <th scope="col">Qty</th>
                                                <th scope="col">Subtotal</th>
                                                <th scope="col">Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% order.orderItems.forEach((item, index) => { %>
                                                <tr class="text-center align-items-center">
                                                    <input type="hidden" class="prdouct-id" value="<%= item.product?._id %>">
                                                    <td class="text-start"><%= item.product?.name || 'Unknown product' %></td>
                                                    <td>
                                                        <div class="border p-1 rounded text-center"><%= item.statusHistory[item.statusHistory.length - 1].status %></div>
                                                    </td>
                                                    <td>₹<%= item.discountPrice || 0 %></td>
                                                    <td><%= item.quantity %></td>
                                                    <td>₹<%= (item.quantity * (item.discountPrice || 0)) %></td>
                                                    <td class="text-center align-middle">
                                                        <button class="btn custom-outline-btn btn-sm update-btn" data-bs-toggle="modal" data-bs-target="#statusChangeModal" data-product-id="<%= item.product._id %>">
                                                            Update
                                                        </button>
                                                    </td>
                                                </tr>
                                            <% }) %>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <div class="card mb-4 border-0" style="border-radius: 15px; overflow: hidden;">
                            <div class="card-header bg-gradient text-white py-3" style="background-color: #5b3f64;">
                                <h5 class="card-title mb-0 fw-bold">Shipping Address</h5>
                            </div>
                            <div class="card-body p-4" style="background: #fff;">
                                <div class="row">
                                    <div class="mt-2">
                                        <p class="mb-1 text-muted fw-bold"><%= address.name %> <%= address.phone %></p>
                                        <p class="mb-1 text-muted">
                                            <%= address.addressLine1 %>
                                            <% if (address.addressLine2) { %>
                                                , <%= address.addressLine2 %>
                                            <% } %>
                                            <% if (address.landmark) { %>
                                                , <%= address.landmark %>
                                            <% } %>
                                            , <%= address.city %>, <%= address.state %>, <%= address.pincode %>
                                        </p>                                        
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card border-0" style="border-radius: 15px; overflow: hidden;">
                            <% if (order.cancelReason) { %>
                                <div class="card-body py-2 px-4" style="background: #fff;">
                                    <div class="mt-1">
                                        <p class="mb-1 text-muted fw-bold">Cancel Reason: <%= order.cancelReason %></p>
                                    </div>
                                </div>
                            <% } %>
                        </div>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <!-- Status Change Modal -->
    <div class="modal fade" id="statusChangeModal" tabindex="-1" aria-labelledby="statusChangeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header py-2" style="background-color: #5b3f64; color: white;">
                    <h5 class="modal-title" id="statusChangeModalLabel">Change Order Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="statusOrderId" value="<%= order.orderId %>">
                    <div class="mb-3">
                        <label for="orderStatus" class="form-label fw-bold">Select Status</label>
                        <select class="form-select" id="orderStatus" required>
                            <option value="" selected disabled>Select a status</option>
                            <option value="Pending">Pending</option>
                            <option value="Shipped">Shipped</option>
                            <option value="Out for Delivery">Out for Delivery</option>
                            <option value="Delivered">Delivered</option>
                            <option value="Cancelled">Cancelled</option>
                        </select>
                        <div class="invalid-feedback">Please select a status.</div>
                    </div>
                    <div class="mb-3" id="cancelReasonContainer" style="display: none;">
                        <label for="cancelReason" class="form-label fw-bold">Reason for Cancellation</label>
                        <select class="form-select" id="cancelReason">
                            <option value="" selected disabled>Select a reason</option>
                            <option value="Product Damaged">Product Damaged</option>
                            <option value="Customer not responding">Customer not responding</option>
                            <option value="Shipping delay">Shipping delay</option>
                            <option value="Order placed by mistake">Order placed by mistake</option>
                            <option value="Other">Other</option>
                        </select>
                        <div class="invalid-feedback">Please select a reason for cancellation.</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn custom-btn" onclick="submitStatusChange()">Confirm</button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function toggleCancelReason() {
            const status = document.getElementById('orderStatus').value;
            const cancelReasonContainer = document.getElementById('cancelReasonContainer');
            if (status === 'Cancelled') {
                cancelReasonContainer.style.display = 'block';
            } else {
                cancelReasonContainer.style.display = 'none';
                document.getElementById('cancelReason').value = '';
            }
        }

        let selectedProductId = null;

        document.querySelectorAll('.update-btn').forEach(button => {
            button.addEventListener('click', () => {
                selectedProductId = button.getAttribute('data-product-id');
            });
        });

        async function submitStatusChange() {
            const orderId = document.getElementById('statusOrderId').value;
            const status = document.getElementById('orderStatus').value;
            const cancelReason = document.getElementById('cancelReason').value;

            if (!status) {
                document.getElementById('orderStatus').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('orderStatus').classList.remove('is-invalid');
            }

            if (status === 'Cancelled' && !cancelReason) {
                document.getElementById('cancelReason').classList.add('is-invalid');
                return;
            } else {
                document.getElementById('cancelReason').classList.remove('is-invalid');
            }

            const modal = bootstrap.Modal.getInstance(document.getElementById('statusChangeModal'));
            modal.hide();

            await updateOrderStatus(orderId, status, cancelReason);
        }

        async function updateOrderStatus(orderId, newStatus, reason = null) {
            try {
                const body = { productId : selectedProductId, status: newStatus };
                if (reason) body.cancelReason = reason;

                const response = await fetch(`/admin/orders?id=${orderId}`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(body)
                });

                const data = await response.json();

                if (response.ok) {
                    Swal.fire({
                        text: data.message,
                        icon: "success",
                        timer: 2000,
                        showConfirmButton: false
                    }).then(() => {
                        window.location.reload(true);
                    });
                } else {
                    Swal.fire({
                        text: data.message || 'Failed to update status',
                        icon: "error",
                        timer: 2000,
                        showConfirmButton: false
                    });
                }
            } catch (error) {
                console.error('Error updating status:', error);
                Swal.fire({
                    text: 'An error occurred while updating the status',
                    icon: "error",
                    timer: 2000,
                    showConfirmButton: false
                });
            }
        }

        // Add event listener for status change
        document.getElementById('orderStatus').addEventListener('change', toggleCancelReason);
    </script>
</body>