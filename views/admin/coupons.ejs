<body class="bg-violet">
    <%- include('../partials/header') %>

    <div class="container-fluid custom-sm-container w-100 sidebar-header">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'coupons' }) %>

            <main class="col-md-10 col-lg-9 px-md-4 py-4 mx-auto px-3">
                <div class="d-flex justify-content-between align-items-center flex-wrap gap-2 mb-3">
                    <h1 class="h3 mb-3 fw-bold">Coupons</h1>
                    <button type="button" class="btn btn-sm d-flex align-items-center gap-1 text-white" style="background-color: #5b3f64;" data-bs-toggle="modal" data-bs-target="#addCouponModal">
                        <i class="fa-solid fa-plus"></i> 
                        <span class="d-none d-sm-inline">New</span>
                    </button>
                </div>

                <!-- Filters and Add Coupon Button -->
                <div class="d-flex flex-wrap align-items-center justify-content-between gap-3 mb-4">
                    <div class="d-flex gap-2">
                        <div class="flex-grow-1" style="max-width: 180px;">
                            <select class="form-select filter-select">
                                <option disabled hidden>Filter â‡…</option>
                                <option value="1" <%= selectedFilter === undefined ? 'selected' : '' %>>All</option>
                                <option value="true" <%= selectedFilter === 'true' ? 'selected' : '' %>>Active</option>
                                <option value="false" <%= selectedFilter === 'false' ? 'selected' : '' %>>Expired</option>
                            </select>
                        </div>
                    </div>

                    <div class="d-flex gap-4 align-items-center">
                        <form class="d-flex search-container flex-grow-1" style="max-width: 300px;" id="searchForm">
                            <div class="input-group">
                                <input id="searchInput" class="form-control" type="search" placeholder="Search coupon name..." aria-label="Search" value="<%= searchQuery || '' %>">
                                <button class="btn" type="submit" style="background-color: #5b3f64;">
                                    <i class="fas fa-search text-white"></i>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>

                <!-- Add Coupon Modal -->
                <div class="modal fade" id="addCouponModal" tabindex="-1" aria-labelledby="addCouponModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                                <h5 class="modal-title fw-bold" id="addCouponModalLabel">Add new Coupon</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form id="addCouponForm">
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addName" class="form-label fw-semibold">Coupon Name</label>
                                            <input type="text" class="form-control rounded-3" id="addName" name="addName" placeholder="Enter Coupon Name">
                                            <div id="addNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addCode" class="form-label fw-semibold">Coupon Code</label>
                                            <input type="text" class="form-control rounded-3" id="addCode" name="addCode" placeholder="Enter Coupon Code">
                                            <div id="addCodeError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>

                                    <div class="mb-4 w-100">
                                        <label for="addDescription" class="form-label fw-semibold">Coupon Description</label>
                                        <input type="text" class="form-control rounded-3" id="addDescription" name="addDescription" placeholder="Enter Coupon Description">
                                        <div id="addDescriptionError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addStartDate" class="form-label fw-semibold">Start Date</label>
                                            <input type="date" class="form-control rounded-3" id="addStartDate" name="addStartDate">
                                            <div id="addStartDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addExpiryDate" class="form-label fw-semibold">Expiry Date</label>
                                            <input type="date" class="form-control rounded-3" id="addExpiryDate" name="addExpiryDate">
                                            <div id="addExpiryDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="addMinPrice" class="form-label fw-semibold">Minimum Price</label>
                                            <input type="number" class="form-control rounded-3" id="addMinPrice" name="addMinPrice" placeholder="Enter Minimum Price">
                                            <div id="addMinPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="addOfferPrice" class="form-label fw-semibold">Offer Price</label>
                                            <input type="number" class="form-control rounded-3" id="addOfferPrice" name="addOfferPrice" placeholder="Enter Offer Price">
                                            <div id="addOfferPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end">
                                        <div class="w-50 me-2">
                                            <label for="addStatus" class="form-label fw-semibold">Status</label>
                                            <select class="form-select rounded-3" id="addStatus" name="addStatus">
                                                <option value="Active">Active</option>
                                                <option value="Inactive">Expired</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #5b3f64;">
                                            <i class="fa fa-plus-circle me-2"></i> Add Coupon
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Edit Coupon Modal -->
                <div class="modal fade" id="editCouponModal" tabindex="-1" aria-labelledby="editCouponModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                                <input type="hidden" id="originalCouponName" name="originalCouponName">
                                <h5 class="modal-title fw-bold" id="editCouponModalLabel">Update Coupon</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <form id="editCouponForm" class="needs-validation" novalidate>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editName" class="form-label fw-semibold">Coupon Name</label>
                                            <input type="text" class="form-control rounded-3" id="editName" name="editName" placeholder="Enter Coupon Name">
                                            <div id="editNameError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editCode" class="form-label fw-semibold">Coupon Code</label>
                                            <input type="text" class="form-control rounded-3" id="editCode" name="editCode" placeholder="Enter Coupon Code">
                                            <div id="editCodeError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="mb-4 w-100">
                                        <label for="editDescription" class="form-label fw-semibold">Coupon Description</label>
                                        <input type="text" class="form-control rounded-3" id="editDescription" name="editDescription" placeholder="Enter Coupon Description">
                                        <div id="editDescriptionError" style="font-size: 0.8em; color: #ff0101;"></div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editStartDate" class="form-label fw-semibold">Start Date</label>
                                            <input type="date" class="form-control rounded-3" id="editStartDate" name="editStartDate">
                                            <div id="editStartDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editExpiryDate" class="form-label fw-semibold">Expiry Date</label>
                                            <input type="date" class="form-control rounded-3" id="editExpiryDate" name="editExpiryDate">
                                            <div id="editExpiryDateError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex w-100 gap-3">
                                        <div class="mb-4 w-100">
                                            <label for="editMinPrice" class="form-label fw-semibold">Minimum Price</label>
                                            <input type="number" class="form-control rounded-3" id="editMinPrice" name="editMinPrice" placeholder="Enter Minimum Price">
                                            <div id="editMinPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                        <div class="mb-4 w-100">
                                            <label for="editOfferPrice" class="form-label fw-semibold">Offer Price</label>
                                            <input type="number" class="form-control rounded-3" id="editOfferPrice" name="editOfferPrice" placeholder="Enter Offer Price">
                                            <div id="editOfferPriceError" style="font-size: 0.8em; color: #ff0101;"></div>
                                        </div>
                                    </div>
                                    <div class="d-flex justify-content-between align-items-end">
                                        <div class="w-25 me-2">
                                            <label for="editStatus" class="form-label fw-semibold">Status</label>
                                            <select class="form-select rounded-3" id="editStatus" name="editStatus">
                                                <option value="Active">Active</option>
                                                <option value="Inactive">Expired</option>
                                            </select>
                                        </div>
                                        <button type="submit" class="btn px-4 py-2 text-white shadow-sm align-self-end" style="background-color: #5b3f64;">
                                            <i class="fa fa-check-circle me-2"></i> Update Coupon
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Desktop Table View -->
                <div class="d-none d-md-block">
                    <div class="card">
                        <div class="card-body p-0 m-0">
                            <div class="table-responsive">
                                <table class="table table-hover text-center">
                                    <thead>
                                        <tr>
                                            <th>SL No</th>
                                            <th class="text-start ps-5">Coupon Name</th>
                                            <th>Coupon Code</th>
                                            <th>Start Date</th>
                                            <th>Expiry Date</th>
                                            <th>Min Price</th>
                                            <th>Offer Price</th>
                                            <th>Used</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% coupons.reverse().forEach((coupon, index) => { %>
                                        <tr>
                                            <td><%= index + 1 %></td>
                                            <td class="text-start ps-4"><%= coupon.name %></td>
                                            <td><%= coupon.code %></td>
                                            <td><%= new Date(coupon.startDate).toLocaleDateString("en-GB") %></td>
                                            <td><%= new Date(coupon.expiryDate).toLocaleDateString("en-GB") %></td>
                                            <td><%= coupon.minPrice %></td>
                                            <td><%= coupon.offerPrice %></td>
                                            <td><%= coupon.used %></td>
                                            <td>
                                                <div class="d-flex justify-content-center align-items-center">
                                                    <p style=" margin: 0;" class="badge stock-color <%= coupon.status === 'Active' ? '' : 'd-none' %>">
                                                        Active
                                                    </p>   
                                                    <p style="margin: 0;" class="badge no-stock-color <%= coupon.status === 'Active' ? 'd-none' : '' %>">
                                                        Expired
                                                    </p>
                                                </div>
                                            </td>
                                            <td>
                                                <button 
                                                    class="btn btn-sm me-2" 
                                                    style="color: #5b3f64;"
                                                    data-bs-toggle="modal" 
                                                    data-bs-target="#editCouponModal"
                                                    onclick="openEditModal(
                                                        '<%= coupon.name %>',
                                                        '<%= coupon.code %>', 
                                                        '<%= coupon.description %>', 
                                                        '<%= coupon.startDate.toISOString().split('T')[0] %>', 
                                                        '<%= coupon.expiryDate.toISOString().split('T')[0] %>',
                                                        '<%= coupon.minPrice %>',
                                                        '<%= coupon.offerPrice %>',
                                                        '<%= coupon.status %>'
                                                    )">
                                                    <i class="fa-solid fa-pen-to-square"></i>
                                                </button>
                                                <button class="deleteButton btn btn-sm me-2" data-coupon-name="<%= coupon.name %>">
                                                    <i class="fa-solid fa-trash" style="color: #5b3f64;"></i>
                                                </button>
                                            </td>
                                        </tr>
                                        <% }) %>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-center mt-3">
                        <nav>
                            <ul class="pagination pagination-sm">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                            <span aria-hidden="true">Â«</span>
                                        </a>
                                    </li>
                                <% } %>
                                <% for(let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                            <span aria-hidden="true">Â»</span>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                </div>


                <!-- Mobile Card View -->
                <div class="d-block d-md-none">
                    <% coupons.reverse().forEach((coupon, index) => { %>
                        <div class="card mb-3 shadow-sm">
                            <div class="card-body p-3">
                                <!-- Header Row -->
                                <div class="d-flex justify-content-between align-items-start mb-3">
                                    <div>
                                        <h6 class="fw-bold mb-1"><%= coupon.name %></h6>
                                        <small class="text-muted">Code: <%= coupon.code %></small>
                                    </div>
                                    <span class="badge <%= coupon.status === 'Active' ? 'stock-color' : 'no-stock-color' %>">
                                        <%= coupon.status %>
                                    </span>
                                </div>

                                <!-- Dates Row -->
                                <div class="d-flex justify-content-between mb-2">
                                    <div>
                                        <small class="text-muted">Start:</small>
                                        <div><%= new Date(coupon.startDate).toLocaleDateString("en-GB") %></div>
                                    </div>
                                    <div>
                                        <small class="text-muted">Expiry:</small>
                                        <div><%= new Date(coupon.expiryDate).toLocaleDateString("en-GB") %></div>
                                    </div>
                                </div>

                                <!-- Prices Row -->
                                <div class="d-flex justify-content-between mb-3">
                                    <div>
                                        <small class="text-muted">Min Price:</small>
                                        <div>â‚¹<%= coupon.minPrice %></div>
                                    </div>
                                    <div>
                                        <small class="text-muted">Offer:</small>
                                        <div>â‚¹<%= coupon.offerPrice %></div>
                                    </div>
                                    <div>
                                        <small class="text-muted">Used:</small>
                                        <div><%= coupon.used %></div>
                                    </div>
                                </div>

                                <!-- Description -->
                                <div class="mb-3">
                                    <small class="text-muted">Description:</small>
                                    <div class="text-break"><%= coupon.description %></div>
                                </div>

                                <!-- Action Buttons -->
                                <div class="d-flex justify-content-between pt-3 border-top">
                                    <button 
                                        class="btn btn-sm" 
                                        style="color: #5b3f64;"
                                        data-bs-toggle="modal" 
                                        data-bs-target="#editCouponModal"
                                        onclick="openEditModal(
                                            '<%= coupon.name %>',
                                            '<%= coupon.code %>', 
                                            '<%= coupon.description %>', 
                                            '<%= coupon.startDate.toISOString().split('T')[0] %>', 
                                            '<%= coupon.expiryDate.toISOString().split('T')[0] %>',
                                            '<%= coupon.minPrice %>',
                                            '<%= coupon.offerPrice %>',
                                            '<%= coupon.status %>'
                                        )">
                                        <i class="fa-solid fa-pen-to-square me-1"></i> Edit
                                    </button>
                                    <button class="btn btn-sm text-danger deleteButton" data-coupon-name="<%= coupon.name %>">
                                        <i class="fa-solid fa-trash me-1"></i> Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }) %>

                    <!-- Pagination for mobile -->
                    <div class="d-flex justify-content-center mt-4 mb-3">
                        <nav>
                            <ul class="pagination pagination-sm">
                                <% if (currentPage > 1) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                            <span aria-hidden="true">Â«</span>
                                        </a>
                                    </li>
                                <% } %>
                                <% for(let i = 1; i <= totalPages; i++) { %>
                                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                    </li>
                                <% } %>
                                <% if (currentPage < totalPages) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                            <span aria-hidden="true">Â»</span>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
        function openEditModal(name, code, description, startDate, expiryDate, minPrice, offerPrice, status) {
            document.getElementById("originalCouponName").value = name;
            document.getElementById("editName").value = name;
            document.getElementById('editCode').value = code;
            document.getElementById('editDescription').value = description;
            document.getElementById("editStartDate").value = startDate;
            document.getElementById("editExpiryDate").value = expiryDate;
            document.getElementById("editMinPrice").value = minPrice;
            document.getElementById("editOfferPrice").value = offerPrice;
            document.getElementById("editStatus").value = status;
        }

        document.addEventListener("DOMContentLoaded", () => {

            const today = new Date().setHours(0, 0, 0, 0);

            // ======================== Edit Coupon ========================
            document.getElementById("editCouponForm")?.addEventListener("submit", async (event) => {
                event.preventDefault();

                // Get values from form
                const orgName = document.getElementById("originalCouponName").value.trim();
                const editName = document.getElementById("editName").value.trim();
                const editCode = document.getElementById('editCode').value.trim();
                const editDescription = document.getElementById('editDescription').value.trim();
                const editStartDate = document.getElementById("editStartDate").value;
                const editExpiryDate = document.getElementById("editExpiryDate").value;
                const editMinPrice = document.getElementById("editMinPrice").value;
                const editOfferPrice = document.getElementById("editOfferPrice").value;
                const editStatus = document.getElementById("editStatus").value

                let errors = {
                    editName: document.getElementById("editNameError"),
                    editCode : document.getElementById('editCodeError'),
                    editDescription : document.getElementById('editDescriptionError'),
                    editStartDate: document.getElementById("editStartDateError"),
                    editExpiryDate: document.getElementById("editExpiryDateError"),
                    editMinPrice: document.getElementById("editMinPriceError"),
                    editOfferPrice: document.getElementById("editOfferPriceError"),
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!editName) {
                    errors.editName.innerText = "Name is required.";
                    hasError = true;
                }
                if (!editCode) {
                    errors.editCode.innerText = "Coupon Code is required.";
                    hasError = true;
                }
                if (!editDescription) {
                    errors.editDescription.innerText = "Description is required.";
                    hasError = true;
                }
                if (!editStartDate) {
                    errors.editStartDate.innerText = "Start date is required.";
                    hasError = true;
                }
                if (!editExpiryDate) {
                    errors.editExpiryDate.innerText = "Expiry date is required.";
                    hasError = true;
                }
                if (!editMinPrice) {
                    errors.editMinPrice.innerText = "Minimum price is required.";
                    hasError = true;
                }
                if (!editOfferPrice) {
                    errors.editOfferPrice.innerText = "Offer price is required.";
                    hasError = true;
                }

                if (new Date(editStartDate).setHours(0, 0, 0, 0) < today) {
                    errors.editStartDate.innerText = "Start date cannot be in the past.";
                    hasError = true;
                }

                if (new Date(editExpiryDate).setHours(0, 0, 0, 0) < today) {
                    errors.editExpiryDate.innerText = "Expiry date cannot be in the past.";
                    hasError = true;
                }

                if (editStartDate && editExpiryDate && new Date(editStartDate) > new Date(editExpiryDate)) {
                    errors.editExpiryDate.innerText = "Expiry date must be after the start date.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = {orgName, editName, editCode, editDescription, editStartDate, editExpiryDate, editMinPrice, editOfferPrice, editStatus};

                try {
                    const response = await fetch("/admin/coupons", {
                        method: "PUT",
                        headers : {'content-type' : 'application/json'},
                        body: JSON.stringify(formData),
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            text: "Coupon updated successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        const result = await response.json();
                        Swal.fire({
                            icon: "error",
                            text: result.error || "Coupon update failed!",
                            showConfirmButton: false,
                            timer: 2000,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        text: "An unexpected error occurred.",
                        showConfirmButton: false,
                        timer: 2000,
                    });
                }
            });

            // ======================== Add Coupon ========================
            document.getElementById("addCouponForm")?.addEventListener("submit", async (event) => {
                event.preventDefault();

                const addName = document.getElementById("addName").value.trim();
                const addCode = document.getElementById('addCode').value.trim();
                const addDescription = document.getElementById('addDescription').value.trim();
                const addStartDate = document.getElementById("addStartDate").value;
                const addExpiryDate = document.getElementById("addExpiryDate").value;
                const addMinPrice = document.getElementById("addMinPrice").value;
                const addOfferPrice = document.getElementById("addOfferPrice").value;
                

                let errors = {
                    addName: document.getElementById("addNameError"),
                    addCode : document.getElementById('addCodeError'),
                    addDescription : document.getElementById('addDescriptionError'),
                    addStartDate: document.getElementById("addStartDateError"),
                    addExpiryDate: document.getElementById("addExpiryDateError"),
                    addMinPrice: document.getElementById("addMinPriceError"),
                    addOfferPrice: document.getElementById("addOfferPriceError"),
                };

                Object.values(errors).forEach((el) => (el.innerText = ""));
                let hasError = false;

                if (!addName) {
                    errors.addName.innerText = "Name is required.";
                    hasError = true;
                }

                if (!addCode) {
                    errors.addCode.innerText = "Coupon Code is required.";
                    hasError = true;
                }
                if (!addDescription) {
                    errors.addDescription.innerText = "Description is required.";
                    hasError = true;
                }

                if (!addStartDate) {
                    errors.addStartDate.innerText = "Start date is required.";
                    hasError = true;
                }
                if (!addExpiryDate) {
                    errors.addExpiryDate.innerText = "Expiry date is required.";
                    hasError = true;
                }
                if (!addMinPrice) {
                    errors.addMinPrice.innerText = "Minimum price is required.";
                    hasError = true;
                }
                if (!addOfferPrice) {
                    errors.addOfferPrice.innerText = "Offer price is required.";
                    hasError = true;
                }

                if (new Date(addStartDate).setHours(0, 0, 0, 0) < today) {
                    errors.addStartDate.innerText = "Start date cannot be in the past.";
                    hasError = true;
                }

                if (new Date(addExpiryDate).setHours(0, 0, 0, 0) < today) {
                    errors.addExpiryDate.innerText = "Expiry date cannot be in the past.";
                    hasError = true;
                }

                if (addStartDate && addExpiryDate && new Date(addStartDate) > new Date(addExpiryDate)) {
                    errors.addExpiryDate.innerText = "Expiry date must be after the start date.";
                    hasError = true;
                }

                if (hasError) return;

                const formData = {
                    addName,
                    addCode,
                    addDescription,
                    addStartDate,
                    addExpiryDate,
                    addMinPrice,
                    addOfferPrice
                };

                try {
                    const response = await fetch("/admin/coupons", {
                        method: "POST",
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(formData),
                    });

                    const result = await response.json();

                    if (response.ok) {
                        Swal.fire({
                            icon: "success",
                            text: "Coupon added successfully!",
                            showConfirmButton: false,
                            timer: 2000,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        Swal.fire({
                            icon: "error",
                            text: result.error || "Coupon creation failed!",
                            showConfirmButton: false,
                            timer: 2000,
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    Swal.fire({
                        icon: "error",
                        text: "An unexpected error occurred.",
                        showConfirmButton: false,
                        timer: 2000,
                    });
                }
            });

            document.querySelectorAll('.deleteButton').forEach(button => {
                button.addEventListener('click', async (e) => {
                    const couponName = e.currentTarget.getAttribute('data-coupon-name');

                    const result = await Swal.fire({
                        text: `You are about to delete the coupon "${couponName}". This action cannot be undone!`,
                        icon: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#d33",
                        cancelButtonColor: "#3085d6",
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "Cancel"
                    });

                    if (result.isConfirmed) {
                        try {
                            const response = await fetch('/admin/coupons', {
                                method: 'DELETE',
                                headers: { 'Content-Type': 'application/json' },
                                body: JSON.stringify({ couponName })
                            });

                            const data = await response.json();

                            if (response.ok) {
                                Swal.fire({
                                    icon: 'success',
                                    text: data.message || 'Coupon deleted successfully.',
                                    showConfirmButton: false,
                                    timer: 2000,
                                }).then(() => {
                                    location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    text: data.error || 'Failed to delete the coupon.',
                                });
                            }
                        } catch (error) {
                            console.error('Error:', error);
                            Swal.fire({
                                icon: 'error',
                                text: 'Something went wrong. Please try again.',
                            });
                        }
                    }
                });
            });


            document.getElementById('searchForm').addEventListener('submit', async function (event) {
                event.preventDefault();
                const searchQuery = document.getElementById('searchInput').value.trim();
                try {
                    if (searchQuery) {
                        window.location.href = `/admin/coupons?q=${encodeURIComponent(searchQuery)}`;
                    } else if (searchQuery == "") {
                        window.location.href = '/admin/coupons'; 
                    }
                } catch (error) {
                    console.error('Error fetching search results:', error);
                }
            });

            document.querySelector('.filter-select').addEventListener('change', function () {
                const filterValue = this.value;
                let query = '';
                if (filterValue === 'true') {
                    query = '?status=true';
                } else if (filterValue === 'false') {
                    query = '?status=false';
                }
                window.location.href = `/admin/coupons${query}`;
            });
        });
    </script>
</body>