<body class="bg-violet">

    <!-- Navbar -->
    <%- include('../partials/header') %>

    <!-- Sidebar + Main Content Wrapper -->
    <div class="container-fluid w-100 sidebar-header">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'refunds' }) %>

            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-9 px-md-4 py-4 mx-auto">
                <h1 class="h3 mb-4">Refund/Return Requests</h1>  

                <!-- Filters and Export Button -->
                <form id="filterForm" method="GET" action="/admin/refunds">
                    <div class="d-flex justify-content-between mb-4">
                        <!-- Filter by Status -->
                        <div class="col-2">
                            <select class="form-select" id="statusFilter" name="status" onchange="document.getElementById('filterForm').submit();">
                                <option value="" <%= status === '' ? 'selected' : '' %>>Filter by Status</option>
                                <option value="Pending" <%= status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                <option value="Approved" <%= status === 'Approved' ? 'selected' : '' %>>Approved</option>
                                <option value="Rejected" <%= status === 'Rejected' ? 'selected' : '' %>>Rejected</option>
                            </select>
                        </div>
                        
                        <!-- Search Bar -->
                        <div class="d-flex search-container flex-grow-1" style="max-width: 300px;">
                            <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search" name="search" value="<%= search %>">
                            <button class="btn" type="submit" style="background-color: #3e29a8;">
                                <i class="fas fa-search text-white"></i>
                            </button>
                            <button type="button" class="btn text-info" onclick="clearFilters()">
                                <i class="fa-regular fa-circle-xmark fa-xl"></i>
                            </button>
                        </div>
                    </div>
                </form>

                <!-- Refund/Return Table -->
                <div class="card">
                    <div class="card-body p-0 m-0">
                        <div class="table-responsive">
                            <table class="table" id="refundReturnTable">
                                <thead>
                                    <tr class="text-center">
                                        <th>Order ID</th>
                                        <th>Customer</th>
                                        <th>Request Date</th>
                                        <th>Amount</th>
                                        <th>Reason</th>
                                        <th>Status</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (refundRequests.length > 0) { %>
                                        <% refundRequests.forEach(request => { %>
                                            <tr class="text-center">
                                                <td>#<%= request.order.orderId %></td>
                                                <td><%= request.order.userId.name || 'N/A' %></td>
                                                <td><%= request.createdAt.toISOString().split('T')[0] %></td>
                                                <td>â‚¹<%= (request.order?.price - request.order.coupon + request.order.delivery).toLocaleString('en-IN') || "" %></td>
                                                <td><%= request.reason || 'N/A' %></td>
                                                <td>
                                                    <% if (request.status === 'Pending') { %>
                                                        <span class="badge bg-warning" style="border-radius: 28px; width: 100px;">Pending</span>
                                                    <% } else if (request.status === 'Approved') { %>
                                                        <span class="badge bg-success" style="border-radius: 28px; width: 100px;">Approved</span>
                                                    <% } else if (request.status === 'Rejected') { %>
                                                        <span class="badge bg-danger" style="border-radius: 28px; width: 100px;">Rejected</span>
                                                    <% } else if (request.status === 'Processed') { %>
                                                        <span class="badge bg-info" style="border-radius: 28px; width: 100px;">Processed</span>
                                                    <% } %>
                                                </td>
                                                <td>
                                                    <button type="button" class="btn btn-primary view-refund-btn" 
                                                        data-product-name="<%= request.product.name %>" 
                                                        data-price="<%= (request.order?.price - request.order.coupon + request.order.delivery) %>" 
                                                        data-reason="<%= request.reason %>" 
                                                        data-date="<%= request.createdAt.toISOString() %>" 
                                                        data-status="<%= request.status %>"
                                                        data-id="<%= request.order._id %>"
                                                        onclick="openRefundModal(this)">
                                                        View
                                                    </button>
                                                </td>
                                            </tr>
                                        <% }) %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="7" class="text-center">No refund/return requests found</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                
                <div class="modal fade" id="RefundModal" tabindex="-1" aria-labelledby="RefundModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered modal-lg" style="max-width: 700px;">
                        <div class="modal-content shadow-lg border-0 rounded-3">
                            <div class="modal-header text-white" style="background-color: #5b3f64; height: 50px;">
                                <h5 class="modal-title fw-bold" id="editRefundModalLabel">Refund Request Details</h5>
                                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body p-4">
                                <div class="mb-3">
                                    <strong>Product Name:</strong> <span id="refundProductName"></span>
                                </div>
                                <div class="mb-3">
                                    <strong>Amount:</strong><span id="refundProductAmount"></span>
                                </div>
                                <div class="mb-3">
                                    <strong>Refund Reason:</strong> <span id="refundReason"></span>
                                </div>
                                <div class="mb-3">
                                    <strong>Request Date:</strong> <span id="refundDate"></span>
                                </div>
                                <div class="mb-3">
                                    <strong>Current Status:</strong> 
                                    <span id="refundStatus" class="badge text-dark bg-info"></span>
                                </div>
                
                                <div class="d-flex justify-content-end align-items-center gap-3" id="actionButtons">
                                    <button type="button" class="btn px-4 py-2 text-white shadow-sm approve-btn" style="background-color: #00d61d;" onclick="updateRefundStatus('')">
                                        <i class="fa fa-check-circle me-2"></i> Approve
                                    </button>
                                    <button type="button" class="btn px-4 py-2 text-white shadow-sm reject-btn" style="background-color: #ff0011;">
                                        <i class="fa fa-circle-xmark me-2"></i> Reject
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
            </main>
        </div>
    </div>

    <script>
       const openRefundModal = (button) => {
            const modalElement = document.getElementById('RefundModal');
            if (!modalElement) {
                console.error('Modal element not found!');
                return;
            }

            const productName = button.getAttribute('data-product-name');
            const price = button.getAttribute('data-price');
            const reason = button.getAttribute('data-reason');
            const date = button.getAttribute('data-date');
            const status = button.getAttribute('data-status');
            const orderId = button.getAttribute('data-id');

            document.getElementById('refundProductName').textContent = productName;
            document.getElementById('refundProductAmount').textContent = `â‚¹${price}`;
            document.getElementById('refundReason').textContent = reason;
            document.getElementById('refundDate').textContent = new Date(date).toLocaleString();
            document.getElementById('refundStatus').textContent = status;

            const approveBtn = document.querySelector('.approve-btn');
            const rejectBtn = document.querySelector('.reject-btn');

            if (status === 'Pending') {
            approveBtn.textContent = 'Approve';
            approveBtn.disabled = false;
            approveBtn.setAttribute('onclick', `updateRefundStatus('${orderId}', 'Approved')`);
            
            rejectBtn.textContent = 'Reject';
            rejectBtn.disabled = false;
            rejectBtn.setAttribute('onclick', `updateRefundStatus('${orderId}', 'Rejected')`);
            
            approveBtn.classList.remove('d-none');
            rejectBtn.classList.remove('d-none');

        } else if (status === 'Approved') {
            approveBtn.textContent = 'Approved';
            approveBtn.disabled = true;
            approveBtn.removeAttribute('onclick');

            rejectBtn.classList.add('d-none');
            rejectBtn.removeAttribute('onclick');

        } else {
            rejectBtn.textContent = 'Rejected';
            rejectBtn.disabled = true;
            rejectBtn.removeAttribute('onclick');

            approveBtn.classList.add('d-none');
            approveBtn.removeAttribute('onclick');
        }

            const modal = new bootstrap.Modal(modalElement);
            modal.show();
        };

        document.addEventListener("DOMContentLoaded", function () {
            document.querySelectorAll('.view-refund-btn').forEach(button => {
                button.addEventListener('click', function() {
                    const refundId = this.getAttribute('data-refund-id');
                    const orderId = this.getAttribute('data-id');
                    openRefundModal(refundId, orderId);
                });
            });
        });

        async function updateRefundStatus(orderId, status) {
            Swal.fire({
                text: `Are you sure you want to ${status.toLowerCase()} this refund request?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: `Yes, ${status.toLowerCase()} it!`,
                cancelButtonText: 'No'
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(`/admin/refunds?id=${orderId}`, {
                            method: 'PATCH',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({ status })
                        });

                        const data = await response.json();

                        if (response.ok) {
                            Swal.fire({
                                text: data.message,
                                icon: 'success',
                                timer: 2000,
                                showConfirmButton: false
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                text: data.message || 'Failed to update status',
                                icon: 'error',
                                timer: 2000,
                                showConfirmButton: false
                            });
                        }
                    } catch (error) {
                        console.error('Error updating refund status:', error);
                        Swal.fire({
                            text: 'An error occurred while updating the status',
                            icon: 'error',
                            timer: 2000,
                            showConfirmButton: false
                        });
                    }
                }
            });
        }

        async function filterRequests() {
            const status = document.getElementById('statusFilter').value;
            const url = `/admin/refunds?status=${encodeURIComponent(status)}`;
            
            const response = await fetch(url);
            if (response.ok) {
                const data = await response.json();
                console.log(data);
                
            }
        }
    </script>
</body>