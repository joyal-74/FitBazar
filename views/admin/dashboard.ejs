<body class="bg-light">
    <!-- Navbar -->
    <%- include('../partials/header') %>

    <!-- Sidebar + Main Content -->
    <div class="container-fluid w-100">
        <div class="row g-0">
            <!-- Sidebar -->
            <%- include('../partials/sidebar', { activePage: 'dashboard' }) %>

            <!-- Main Content -->
            <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4" style="margin: 80px 0;">
                <div class="d-flex justify-content-between">
                    <h1 class="h3 mb-4 fw-bold">Dashboard</h1>
                    <!-- Filter Section -->
                    <div class="row mb-4">
                        <div class="col-md-4">
                            <div class="btn-group w-100" role="group" id="filterButtons">
                                <button type="button" class="btn custom-outline-btn filter-btn <%= currentFilter === 'weekly' ? 'active' : '' %>" data-filter="weekly">Weekly</button>
                                <button type="button" class="btn custom-outline-btn filter-btn <%= currentFilter === 'monthly' ? 'active' : '' %>" data-filter="monthly">Monthly</button>
                                <button type="button" class="btn custom-outline-btn filter-btn <%= currentFilter === 'yearly' ? 'active' : '' %>" data-filter="yearly">Yearly</button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- First Row: Wallet and Revenue Charts -->
                <div class="row g-3 mb-4">
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Transactions Data</h5>
                            <div id="walletChart"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Revenue</h5>
                            <div id="revenueLineChart"></div>
                        </div>
                    </div>
                </div>

                <!-- Second Row: Best Selling Products and Categories -->
                <div class="row g-3 mb-4">
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Best Selling Products</h5>
                            <div id="bestSellingChart"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Best Selling Categories</h5>
                            <div id="categoryBarChart"></div>
                        </div>
                    </div>
                </div>

                <!-- Third Row: Top Brands and Sales by Location -->
                <div class="row g-3">
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Top Selling Brands</h5>
                            <div id="bestBrandBarChart"></div>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="card border-0 shadow-sm rounded p-4 h-100">
                            <h5 class="mb-3 fw-bold text-center">Sales by Location</h5>
                            <div id="salesLocationPieChart"></div>
                        </div>
                    </div>
                </div>

                <!-- Loading Indicator -->
                <div id="loadingIndicator" style="display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 1000;">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/apexcharts"></script>
    <script>
        // Store chart instances
        let charts = {
            walletChart: null,
            revenueLineChart: null,
            bestSellingChart: null,
            categoryBarChart: null,
            bestBrandBarChart: null,
            salesLocationPieChart: null
        };

        async function fetchData(filter) {
            try {
                document.getElementById('loadingIndicator').style.display = 'block';
                const response = await fetch(`/admin/dashboard?filter=${filter}`);
                if (!response.ok) throw new Error('Network response was not ok');
                return await response.json();
            } catch (error) {
                console.error('Error fetching data:', error);
                return null;
            } finally {
                document.getElementById('loadingIndicator').style.display = 'none';
            }
        }

        function renderCharts(data) {
            Object.values(charts).forEach(chart => chart?.destroy());

            // Wallet Chart (Donut)
            const walletOptions = {
                chart: { type: 'donut', height: 300, fontFamily: 'Outfit, sans-serif', },
                series: data.chartData || [0],
                labels: data.chartLabels || ['No Data'],
                colors: ['#198754', '#ffc107', '#5b3f64', ],
                legend: { position: 'bottom' },
                dataLabels: {
                    formatter: (val, opts) => opts.w.config.series[opts.seriesIndex]
                },
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };
            charts.walletChart = new ApexCharts(document.querySelector("#walletChart"), walletOptions);
            charts.walletChart.render();

            // Revenue Line Chart
            const revenueOptions = {
                chart: { type: 'area', height: 300, toolbar: { show: false }, fontFamily: 'Outfit, sans-serif', },
                series: [{ name: 'Revenue', data: data.revenueData || [0] }],
                xaxis: { categories: data.revenueLabels || ['No Data'] },
                stroke: { curve: 'smooth' },
                fill: { type: 'gradient', gradient: { shadeIntensity: 1, opacityFrom: 0.6, opacityTo: 0.1 } },
                colors: ['#4CAF50'],
                dataLabels: { enabled: false },
                yaxis: { labels: { formatter: val => `â‚¹${val}` } },
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };

            charts.revenueLineChart = new ApexCharts(document.querySelector("#revenueLineChart"), revenueOptions);
            charts.revenueLineChart.render();

            // Best Selling Products Bar Chart
            const bestSellingOptions = {
                chart: { type: 'bar', height: 300, fontFamily: 'Outfit, sans-serif', toolbar: { show: false } },
                plotOptions: { bar: { horizontal: false, columnWidth: '50%' } },
                dataLabels: { enabled: false },
                xaxis: { categories: data.bestSellingProducts.map(p => p.name) || ['No Data'] },
                colors: ['#5b3f64'],
                series: [{ name: 'Units Sold', data: data.bestSellingProducts.map(p => p.totalSold) || [0] }],
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };
            charts.bestSellingChart = new ApexCharts(document.querySelector("#bestSellingChart"), bestSellingOptions);
            charts.bestSellingChart.render();

            // Top Categories Bar Chart
            const categoryOptions = {
                chart: { type: 'bar', height: 300, fontFamily: 'Outfit, sans-serif', toolbar: { show: false } },
                series: [{ name: 'Units Sold', data: data.topCategories.map(c => c.totalSold) || [0] }],
                xaxis: { categories: data.topCategories.map(c => c.categoryName) || ['No Data'] },
                colors: ['#5b3f64'],
                plotOptions: { bar: { horizontal: false , columnWidth: '50%' }},
                dataLabels: { enabled: false },
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };
            charts.categoryBarChart = new ApexCharts(document.querySelector("#categoryBarChart"), categoryOptions);
            charts.categoryBarChart.render();

            // Top Selling Brands Bar Chart
            const brandOptions = {
                chart: { type: 'bar', height: 300, fontFamily: 'Outfit, sans-serif', toolbar: { show: false }  },
                plotOptions: { bar: { horizontal: true} },
                dataLabels: { enabled: true },
                series: [{ name: 'Units Sold', data: data.brandData.series || [0] }],
                xaxis: { categories: data.brandData.labels || ['No Data'] },
                colors: ['#5b3f64'],
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };
            charts.bestBrandBarChart = new ApexCharts(document.querySelector("#bestBrandBarChart"), brandOptions);
            charts.bestBrandBarChart.render();

            // Sales by Location Pie Chart
            const pieOptions = {
                chart: { type: 'pie', height: 300, fontFamily: 'Outfit, sans-serif', },
                labels: data.locationChartData.labels || ['No Data'],
                series: data.locationChartData.series || [0],
                legend: { position: 'bottom' },
                responsive: [{ breakpoint: 768, options: { chart: { height: 250 } } }]
            };
            charts.salesLocationPieChart = new ApexCharts(document.querySelector("#salesLocationPieChart"), pieOptions);
            charts.salesLocationPieChart.render();
        }

        // Initialize charts with initial data
        const initialData = {
            chartLabels: <%- JSON.stringify(chartLabels) %>,
            chartData: <%- JSON.stringify(chartData) %>,
            revenueLabels: <%- JSON.stringify(revenueLabels) %>,
            revenueData: <%- JSON.stringify(revenueData) %>,
            bestSellingProducts: <%- JSON.stringify(bestSellingProducts) %>,
            topCategories: <%- JSON.stringify(topCategories) %>,
            brandData: <%- JSON.stringify(brandData) %>,
            locationChartData: <%- JSON.stringify(locationChartData) %>
        };
        renderCharts(initialData);

        // Handle filter button clicks
        document.querySelectorAll('.filter-btn').forEach(button => {
            button.addEventListener('click', async () => {
                const filter = button.getAttribute('data-filter');
                
                // Update active button
                document.querySelectorAll('.filter-btn').forEach(btn => btn.classList.remove('active'));
                button.classList.add('active');

                // Fetch new data
                const response = await fetch(`/admin/dashboard?filter=${filter}`);
                if (response.ok) {
                    window.location.href = `/admin/dashboard?filter=${filter}`;
                }
            });
        });
    </script>
</body>